{"version":3,"sources":["utils/constants.js","components/Header/Header.js","components/Cell/Cell.js","redux/search/search.types.js","redux/search/search.action.js","components/SearchBoard/SearchBoard.js","redux/sort/sort.types.js","redux/timer/timer.actions.js","components/SearchHeader/SearchHeader.js","components/SearchPage.js","redux/sort/sort.action.js","components/SortHeader/SortHeader.js","components/SortBoard/SortBoard.js","components/SortPage.js","components/Directory-item/Directory-item.js","components/Directory/Directory.js","components/App.js","redux/directory/directory.reducer.js","utils/utils.js","redux/search/search.reducer.js","redux/sort/sort.reducer.js","redux/rootReducer.js","index.js"],"names":["constants","APP_NAME","N_HORIZONTAL_CELLS","N_VERTICAL_CELLS","START_X","START_Y","END_X","END_Y","CELL_SIZE","WIDTH","HEIGHT","SEARCH_OPTIONS","MAZE_OPTIONS","SORT_OPTIONS","SEARCH","SORT","NO_ALGORITHM_SELECTED","Header","className","to","React","Component","Cell","this","props","x","y","color","key","style","left","top","width","height","backgroundColor","searchTypes","RUN_SEARCH","STOP_SEARCH","CLEAR_SEARCH","DRAG_TARGET","ADD_OBSTACLE","TOGGLE_ADD_OBSTACLE","CLEAR_OBSTACLES","SELECT_SEARCH_ALGORITHM","SELECT_MAZE_ALGORITHM","GENERATE_MAZE","toggleAddintObstacleState","type","selectSearchAlgorithm","algorithm","payload","SearchBoard","getBoardCoords","e","rect","boardRef","getBoundingClientRect","doc","document","documentElement","offset_x","window","pageXOffset","clientLeft","offset_y","pageYOffset","clientTop","clientX","clientY","updateTargetOnDrag","dragTarget","Math","floor","addObstacles","addObstacle","isAddingObstacles","searchCells","path","target","obstacles","onMouseDown","onmousemove","onMouseUp","id","ref","n","backgroundSize","draggable","onDragEnd","length","map","pathCell","cell","row","r_index","ele","c_index","connect","state","searchReducer","cells","dispatch","newPos","newObstacle","sortTypes","RUN_SORT","STOP_SORT","CLEAR_SORT","SELECT_SORT_ALGORITHM","stopTimerForAction","actionType","STOP_TIMER","name","startTimerForAction","START_TIMER","action","interval","search_options","maze_options","SearchHeader","option","label","isRunning","searchDone","dispatchWhenStop","options","value","onChange","onClick","dispatchWhenClear","SearchPage","selectSortAlgorithm","sort_options","SortHeader","sortReducer","SortBoard","currentAlgorithm","SortPage","withRouter","title","imageUrl","size","history","linkUrl","match","push","backgroundImage","toUpperCase","sections","directory","otherSectionProps","App","basename","exact","component","Directory","INITIAL_STATE","directoryReducer","runSearchAlgorithm","searchAlgorithm","BFS","DFS","AStarSearch","DijkstraSearch","runSortAlgorithm","sortAlgorithm","bubbleSort","quickSort","originalArray","array","idx","sortIndex","maxIndex","maxValue","i","temp","dist","abs","neighbors","offsets","from","visited","dijkstra_dist","sort","cell1","cell2","j","offset","nx","ny","direc","new_dist","openSet","closedSet","gScore","fScore","cameFrom","current","generateAStarpath","shift","undefined","find","tmp_gScore","generatePath","prevCell","generateMaze","Array","start","random","openCells","index","nei","getNeighbors","splice","choice","maze","ic","jc","res","arrayToCells","init_visited","init_path","init_obstacles","Number","POSITIVE_INFINITY","init_fScore","init_dist","init_cameFrom","foundTarget","mazeAlgorithm","visited_open","currentCells","result","concat","toBeReturned","currentPath","newx","newy","existing","nextArray","sortDone","nextCells","arrayCells","rootReducer","combineReducers","middlewares","timerMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.5d1c37bd.chunk.js","sourcesContent":["const constants = {\n  APP_NAME: \"visualizer\",\n  N_HORIZONTAL_CELLS: 41,\n  N_VERTICAL_CELLS: 25,\n  START_X: 4,\n  START_Y: 10,\n  END_X: 24,\n  END_Y: 17,\n  CELL_SIZE: 20,\n  WIDTH: 820,\n  HEIGHT: 500,\n  SEARCH_OPTIONS: [\"Search Algorithm\", \"BFS\", \"DFS\", \"A*\", \"Dijkstra\"],\n  MAZE_OPTIONS: [\"Prim\"],\n  SORT_OPTIONS: [\"Sort Algorithm\", \"Bubblesort\", \"Quicksort\"],\n  SEARCH: 0,\n  SORT: 1,\n  NO_ALGORITHM_SELECTED: -1\n};\n\nexport default constants;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Header.css\";\nimport constants from \"../../utils/constants\";\nconst APP_NAME = constants.APP_NAME;\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1 className=\"ui header\">\n          <Link to=\"/\" className=\"item\">\n            Visualizer\n          </Link>\n        </h1>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./Cell.css\";\nimport constants from \"../../utils/constants\";\n\nconst CELL_SIZE = constants.CELL_SIZE;\n\nclass Cell extends React.Component {\n  render() {\n    const { x, y, color, key } = this.props;\n    return (\n      <div\n        className=\"Cell\"\n        key={key}\n        style={{\n          left: `${x + 1}px`,\n          top: `${y + 1}px`,\n          width: `${CELL_SIZE - 1}px`,\n          height: `${CELL_SIZE - 1}px`,\n          backgroundColor: `${color}`\n        }}\n      ></div>\n    );\n  }\n}\n\nexport default Cell;\n","const searchTypes = {\n  RUN_SEARCH: \"RUN_SEARCH\",\n  STOP_SEARCH: \"STOP_SEARCH\",\n  CLEAR_SEARCH: \"CLEAR_SEARCH\",\n  DRAG_TARGET: \"DRAG_TARGET\",\n  ADD_OBSTACLE: \"ADD_OBSTACLE\",\n  TOGGLE_ADD_OBSTACLE: \"TOGGLE_ADD_OBSTACLE\",\n  CLEAR_OBSTACLES: \"CLEAR_OBSTACLES\",\n  SELECT_SEARCH_ALGORITHM: \"SELECT_SEARCH_ALGORITHM\",\n  SELECT_MAZE_ALGORITHM: \"SELECT_MAZE_ALGORITHM\",\n  GENERATE_MAZE: \"GENERATE_MAZE\"\n};\n\nexport default searchTypes;\n","import searchTypes from \"./search.types\";\n\nexport const toggleRunButton = () => ({\n  type: searchTypes.RUN_SEARCH\n});\n\nexport const toggleStopButton = () => ({\n  type: searchTypes.STOP_SEARCH\n});\n\nexport const toggleClearButton = () => ({\n  type: searchTypes.CLEAR_SEARCH\n});\n\nexport const dragTarget = newPos => ({\n  type: searchTypes.DRAG_TARGET,\n  payload: newPos\n});\n\nexport const toggleAddintObstacleState = () => ({\n  type: searchTypes.TOGGLE_ADD_OBSTACLE\n});\n\nexport const addObstacle = newObstacle => ({\n  type: searchTypes.ADD_OBSTACLE,\n  payload: newObstacle\n});\n\nexport const clearObstacles = () => ({\n  type: searchTypes.CLEAR_OBSTACLES\n});\n\nexport const selectSearchAlgorithm = algorithm => ({\n  type: searchTypes.SELECT_SEARCH_ALGORITHM,\n  payload: algorithm\n});\n\nexport const selectMazeAlgorithm = algorithm => ({\n  type: searchTypes.SELECT_MAZE_ALGORITHM,\n  payload: algorithm\n});\n\nexport const generateMaze = () => ({\n  type: searchTypes.GENERATE_MAZE\n});\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./SearchBoard.css\";\nimport Cell from \"../Cell/Cell\";\nimport key from \"weak-key\";\nimport constants from \"../../utils/constants\";\nimport {\n  dragTarget,\n  addObstacle,\n  toggleAddintObstacleState\n} from \"../../redux/search/search.action\";\n\nconst CELL_SIZE = constants.CELL_SIZE;\nconst WIDTH = constants.WIDTH;\nconst HEIGHT = constants.HEIGHT;\nconst START_X = constants.START_X;\nconst START_Y = constants.START_Y;\n\nclass SearchBoard extends React.Component {\n  getBoardCoords = e => {\n    var rect = this.boardRef.getBoundingClientRect();\n    var doc = document.documentElement;\n    var offset_x = rect.left + window.pageXOffset - doc.clientLeft;\n    var offset_y = rect.top + window.pageYOffset - doc.clientTop;\n\n    var x = e.clientX - offset_x;\n    var y = e.clientY - offset_y;\n    return [x, y];\n  };\n  updateTargetOnDrag = e => {\n    const { dragTarget } = this.props;\n    var [x, y] = this.getBoardCoords(e);\n    dragTarget({\n      x: Math.floor(x / CELL_SIZE),\n      y: Math.floor(y / CELL_SIZE)\n    });\n  };\n\n  addObstacles = e => {\n    const { addObstacle, isAddingObstacles } = this.props;\n    if (isAddingObstacles) {\n      var [x, y] = this.getBoardCoords(e);\n      addObstacle({\n        x: Math.floor(x / CELL_SIZE),\n        y: Math.floor(y / CELL_SIZE)\n      });\n    }\n  };\n\n  render() {\n    const {\n      searchCells,\n      path,\n      target,\n      obstacles,\n      toggleAddintObstacleState,\n      isAddingObstacles\n    } = this.props;\n\n    return (\n      <div\n        onMouseDown={e => {\n          if (isAddingObstacles) {\n            this.addObstacles(e);\n            this.boardRef.onmousemove = this.addObstacles;\n          }\n        }}\n        onMouseUp={() => {\n          if (isAddingObstacles) {\n            this.boardRef.onmousemove = null;\n            toggleAddintObstacleState();\n          }\n        }}\n        className=\"Board\"\n        id=\"Board\"\n        ref={n => {\n          this.boardRef = n;\n        }}\n        style={{\n          width: WIDTH,\n          height: HEIGHT,\n          backgroundSize: `${CELL_SIZE}px ${CELL_SIZE}px`\n        }}\n      >\n        <Cell\n          x={START_X * CELL_SIZE}\n          y={START_Y * CELL_SIZE}\n          key=\"START_CELL\"\n          color=\"white\"\n        ></Cell>\n\n        <div draggable=\"true\" onDragEnd={this.updateTargetOnDrag}>\n          <Cell\n            x={target.x * CELL_SIZE}\n            y={target.y * CELL_SIZE}\n            color=\"green\"\n            key=\"END_CELL\"\n          ></Cell>\n        </div>\n\n        {searchCells.length ? (\n          searchCells.map(pathCell =>\n            pathCell.x !== START_X || pathCell.y !== START_Y ? (\n              <Cell\n                x={pathCell.x * CELL_SIZE}\n                y={pathCell.y * CELL_SIZE}\n                key={key(pathCell)}\n              />\n            ) : (\n              <span></span>\n            )\n          )\n        ) : (\n          <span></span>\n        )}\n        {path.length ? (\n          path.map(cell => (\n            <Cell\n              x={cell.x * CELL_SIZE}\n              y={cell.y * CELL_SIZE}\n              key={key(cell)}\n              color=\"green\"\n            />\n          ))\n        ) : (\n          <span></span>\n        )}\n        {obstacles.map((row, r_index) =>\n          row.map((ele, c_index) =>\n            ele ? (\n              <Cell\n                x={c_index * CELL_SIZE}\n                y={r_index * CELL_SIZE}\n                color=\"grey\"\n              />\n            ) : (\n              <span></span>\n            )\n          )\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  searchCells: state.searchReducer.cells,\n  path: state.searchReducer.path,\n  target: state.searchReducer.target,\n  obstacles: state.searchReducer.obstacles,\n  isAddingObstacles: state.searchReducer.isAddingObstacles\n});\n\nconst mapDispatchToProps = dispatch => ({\n  dragTarget: newPos => dispatch(dragTarget(newPos)),\n  addObstacle: newObstacle => dispatch(addObstacle(newObstacle)),\n  toggleAddintObstacleState: () => dispatch(toggleAddintObstacleState())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBoard);\n","const sortTypes = {\n  RUN_SORT: \"RUN_SORT\",\n  STOP_SORT: \"STOP_SORT\",\n  CLEAR_SORT: \"CLEAR_SORT\",\n  SELECT_SORT_ALGORITHM: \"SELECT_SORT_ALGORITHM\"\n};\n\nexport default sortTypes;\n","import { START_TIMER, STOP_TIMER } from \"redux-timer\";\nimport searchTypes from \"../search/search.types\";\nimport sortTypes from \"../sort/sort.types\";\nimport constants from \"../../utils/constants\";\n\nexport const stopTimerForAction = (dispatch, actionType) => {\n  switch (actionType) {\n    case constants.SEARCH:\n      dispatch({\n        type: STOP_TIMER,\n        payload: {\n          name: \"searchTimer\"\n        }\n      });\n      break;\n    case constants.SORT:\n      dispatch({\n        type: STOP_TIMER,\n        payload: {\n          name: \"sortTimer\"\n        }\n      });\n  }\n};\n\nexport const startTimerForAction = (dispatch, actionType) => {\n  switch (actionType) {\n    case constants.SEARCH:\n      dispatch({\n        type: START_TIMER,\n        payload: {\n          name: \"searchTimer\",\n          action: searchTypes.RUN_SEARCH,\n          interval: 100\n        }\n      });\n      break;\n    case constants.SORT:\n      dispatch({\n        type: START_TIMER,\n        payload: {\n          name: \"sortTimer\",\n          action: sortTypes.RUN_SORT,\n          interval: 100\n        }\n      });\n      break;\n    default:\n      break;\n  }\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\nimport \"./SearchHeader.css\";\nimport {\n  startTimerForAction,\n  stopTimerForAction\n} from \"../../redux/timer/timer.actions\";\nimport {\n  toggleStopButton,\n  toggleClearButton,\n  toggleAddintObstacleState,\n  clearObstacles,\n  selectSearchAlgorithm,\n  selectMazeAlgorithm,\n  generateMaze\n} from \"../../redux/search/search.action\";\nimport constants from \"../../utils/constants\";\n\nconst search_options = constants.SEARCH_OPTIONS;\nconst maze_options = constants.MAZE_OPTIONS;\n\nclass SearchHeader extends React.Component {\n  _onSelect(option) {\n    //console.log(option.label);\n    this.props.dispatch(selectSearchAlgorithm(option.label));\n  }\n  render() {\n    const { isRunning, dispatch, searchDone, isAddingObstacles } = this.props;\n    if (searchDone) {\n      dispatchWhenStop(this.props);\n    }\n    return (\n      <div className=\"ui secondary pointing menu\">\n        <Dropdown\n          options={search_options}\n          value={search_options[0]}\n          onChange={option => {\n            this.props.dispatch(selectSearchAlgorithm(option.label));\n          }}\n        />\n        <Dropdown\n          options={maze_options}\n          value={maze_options[0]}\n          onChange={option => {\n            this.props.dispatch(selectMazeAlgorithm(option.label));\n          }}\n        />\n\n        <button\n          className=\"ui primary button\"\n          onClick={() => {\n            isRunning\n              ? dispatchWhenStop(this.props)\n              : startTimerForAction(this.props.dispatch, constants.SEARCH);\n          }}\n        >\n          {isRunning ? \"Stop!\" : \"Run!\"}\n        </button>\n\n        <button\n          className=\"ui primary button\"\n          onClick={() => {\n            dispatchWhenClear(this.props);\n          }}\n        >\n          Clear!\n        </button>\n\n        <button\n          className=\"ui primary button\"\n          onClick={() => {\n            this.props.dispatch(toggleAddintObstacleState());\n          }}\n        >\n          {isAddingObstacles ? \"Drag to add obstacles!\" : \"Add Obstacles!\"}\n        </button>\n\n        <button\n          className=\"ui primary button\"\n          onClick={() => {\n            this.props.dispatch(clearObstacles());\n          }}\n        >\n          Clear Obstacles!\n        </button>\n\n        <button\n          className=\"ui primary button\"\n          onClick={() => {\n            this.props.dispatch(generateMaze());\n          }}\n        >\n          Generate Maze!\n        </button>\n      </div>\n    );\n  }\n}\n\nconst dispatchWhenClear = props => {\n  //props.dispatch(stopTimer());\n  stopTimerForAction(props.dispatch, constants.SEARCH);\n  props.dispatch(toggleClearButton());\n};\n\nconst dispatchWhenStop = props => {\n  //props.dispatch(stopTimer());\n  stopTimerForAction(props.dispatch, constants.SEARCH);\n  props.dispatch(toggleStopButton());\n};\n\nconst mapStateToProps = state => ({\n  isRunning: state.searchReducer.isRunning,\n  searchDone: state.searchReducer.searchDone,\n  isAddingObstacles: state.searchReducer.isAddingObstacles\n});\n\nexport default connect(mapStateToProps)(SearchHeader);\n","import React from \"react\";\nimport SearchBoard from \"../components/SearchBoard/SearchBoard\";\nimport SearchHeader from \"../components/SearchHeader/SearchHeader\";\n\nconst SearchPage = () => {\n  return (\n    <div>\n      <SearchHeader />\n      <SearchBoard />\n    </div>\n  );\n};\n\nexport default SearchPage;\n","import sortTypes from \"./sort.types\";\n\nexport const toggleRunButton = () => ({\n  type: sortTypes.RUN_SORT\n});\n\nexport const toggleStopButton = () => ({\n  type: sortTypes.STOP_SORT\n});\n\nexport const toggleClearButton = () => ({\n  type: sortTypes.CLEAR_SORT\n});\n\nexport const selectSortAlgorithm = algorithm => ({\n  type: sortTypes.SELECT_SORT_ALGORITHM,\n  payload: algorithm\n});\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\nimport \"./SortHeader.css\";\nimport {\n  startTimerForAction,\n  stopTimerForAction\n} from \"../../redux/timer/timer.actions\";\nimport {\n  toggleStopButton,\n  toggleClearButton,\n  selectSortAlgorithm\n} from \"../../redux/sort/sort.action\";\nimport constants from \"../../utils/constants\";\n\nconst sort_options = constants.SORT_OPTIONS;\n\nclass SortHeader extends React.Component {\n  _onSelect(option) {\n    //console.log(option.label);\n    this.props.dispatch(selectSortAlgorithm(option.label));\n  }\n  render() {\n    const { isRunning, dispatch, searchDone } = this.props;\n    if (searchDone) {\n      dispatchWhenStop(this.props);\n    }\n    return (\n      <div className=\"ui secondary pointing menu\">\n        <Dropdown\n          options={sort_options}\n          value={sort_options[0]}\n          onChange={option => {\n            this.props.dispatch(selectSortAlgorithm(option.label));\n          }}\n        />\n\n        <button\n          className=\"ui primary button\"\n          onClick={() => {\n            isRunning\n              ? dispatchWhenStop(this.props)\n              : startTimerForAction(this.props.dispatch, constants.SORT);\n          }}\n        >\n          {isRunning ? \"Stop!\" : \"Run!\"}\n        </button>\n        <button\n          className=\"ui primary button\"\n          onClick={() => {\n            dispatchWhenClear(this.props);\n          }}\n        >\n          Clear!\n        </button>\n      </div>\n    );\n  }\n}\n\nconst dispatchWhenClear = props => {\n  //props.dispatch(stopTimer());\n  stopTimerForAction(props.dispatch, constants.SORT);\n  props.dispatch(toggleClearButton());\n};\n\nconst dispatchWhenStop = props => {\n  //props.dispatch(stopTimer());\n  stopTimerForAction(props.dispatch, constants.SORT);\n  props.dispatch(toggleStopButton());\n};\n\nconst mapStateToProps = state => ({\n  isRunning: state.sortReducer.isRunning,\n  searchDone: state.sortReducer.searchDone\n});\n\nexport default connect(mapStateToProps)(SortHeader);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./SortBoard.css\";\nimport Cell from \"../Cell/Cell\";\nimport key from \"weak-key\";\nimport constants from \"../../utils/constants\";\n\nconst CELL_SIZE = constants.CELL_SIZE;\nconst WIDTH = constants.WIDTH;\nconst HEIGHT = constants.HEIGHT;\n\nclass SortBoard extends React.Component {\n  getBoardCoords = e => {\n    var rect = this.boardRef.getBoundingClientRect();\n    var doc = document.documentElement;\n    var offset_x = rect.left + window.pageXOffset - doc.clientLeft;\n    var offset_y = rect.top + window.pageYOffset - doc.clientTop;\n\n    var x = e.clientX - offset_x;\n    var y = e.clientY - offset_y;\n    return [x, y];\n  };\n  updateTargetOnDrag = e => {\n    const { dragTarget } = this.props;\n    var [x, y] = this.getBoardCoords(e);\n    dragTarget({\n      x: Math.floor(x / CELL_SIZE),\n      y: Math.floor(y / CELL_SIZE)\n    });\n  };\n\n  render() {\n    const {\n      searchCells,\n      path,\n      target,\n      obstacles,\n      toggleAddintObstacleState,\n      isAddingObstacles,\n      currentAlgorithm\n    } = this.props;\n\n    return (\n      <div\n        onMouseDown={e => {\n          if (isAddingObstacles) {\n            this.addObstacles(e);\n            this.boardRef.onmousemove = this.addObstacles;\n          }\n        }}\n        onMouseUp={() => {\n          if (isAddingObstacles) {\n            this.boardRef.onmousemove = null;\n            toggleAddintObstacleState();\n          }\n        }}\n        className=\"Board\"\n        id=\"Board\"\n        ref={n => {\n          this.boardRef = n;\n        }}\n        style={{\n          width: WIDTH,\n          height: HEIGHT,\n          backgroundSize: `${CELL_SIZE}px ${CELL_SIZE}px`\n        }}\n      >\n        {searchCells.length ? (\n          searchCells.map(pathCell => (\n            <Cell\n              x={pathCell.x * CELL_SIZE}\n              y={pathCell.y * CELL_SIZE}\n              key={key(pathCell)}\n            />\n          ))\n        ) : (\n          <span></span>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  searchCells: state.sortReducer.cells\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SortBoard);\n","import React from \"react\";\nimport SortHeader from \"../components/SortHeader/SortHeader\";\nimport SortBoard from \"../components/SortBoard/SortBoard\";\n\nconst SortPage = () => {\n  return (\n    <div>\n      <SortHeader />\n      <SortBoard />\n    </div>\n  );\n};\n\nexport default SortPage;\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./Directory-item.scss\";\nimport constants from \"../../utils/constants\";\nconst APP_NAME = constants.APP_NAME;\n\nconst DirectoryItem = ({ title, imageUrl, size, history, linkUrl, match }) => (\n  <div\n    className={`${size} directory-item`}\n    onClick={() => history.push(`${linkUrl}`)}\n  >\n    <div\n      className=\"background-image\"\n      style={{ backgroundImage: `url(${imageUrl})` }}\n    />\n    <div className=\"content\">\n      <h1 className=\"title\">{title.toUpperCase()}</h1>\n    </div>\n  </div>\n);\n\nexport default withRouter(DirectoryItem);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport DirectoryItem from \"../Directory-item/Directory-item\";\nimport \"./Directory.scss\";\n\nconst Directory = ({ sections }) => (\n  <div className=\"directory-menu\">\n    {sections.map(({ id, ...otherSectionProps }) => (\n      <DirectoryItem key={id} {...otherSectionProps} />\n    ))}\n  </div>\n);\n\nconst mapStateToProps = state => ({\n  sections: state.directory.sections\n});\n\nexport default connect(mapStateToProps)(Directory);\n","import React from \"react\";\nimport Header from \"../components/Header/Header\";\nimport { BrowserRouter, Route, HashRouter } from \"react-router-dom\";\nimport SearchPage from \"./SearchPage\";\nimport SortPage from \"./SortPage\";\nimport Directory from \"../components/Directory/Directory\";\nimport constants from \"../utils/constants\";\nconst APP_NAME = constants.APP_NAME;\n\nconst App = () => {\n  return (\n    <div className=\"ui container\">\n      <HashRouter basename=\"/\">\n        <div>\n          <Header />\n          <Route path=\"/\" exact component={Directory} />\n          <Route path=\"/search\" exact component={SearchPage} />\n          <Route path=\"/sort\" exact component={SortPage} />\n        </div>\n      </HashRouter>\n    </div>\n  );\n};\n\nexport default App;\n","const INITIAL_STATE = {\n  sections: [\n    {\n      title: \"search\",\n      imageUrl:\n        \"https://s3.amazonaws.com/dev.assets.neo4j.com/wp-content/uploads/20181010052900/breadth-first-search-graph-algorithm-example.png\",\n      id: 1,\n      linkUrl: \"/search\"\n    },\n    {\n      title: \"sort\",\n      imageUrl: \"https://miro.medium.com/max/7680/1*s0r4FadYBWCbqS1TAd5OJQ.png\",\n      id: 2,\n      linkUrl: \"/sort\"\n    }\n  ]\n};\n\nconst directoryReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nexport default directoryReducer;\n","import constants from \"../utils/constants\";\n\nconst N_HORIZONTAL_CELLS = constants.N_HORIZONTAL_CELLS;\nconst N_VERTICAL_CELLS = constants.N_VERTICAL_CELLS;\nconst START_X = constants.START_X;\nconst START_Y = constants.START_Y;\nconst END_X = constants.END_X;\nconst END_Y = constants.END_Y;\n\nexport const runSearchAlgorithm = state => {\n  switch (state.searchAlgorithm) {\n    case \"BFS\":\n      return BFS(state);\n    case \"DFS\":\n      return DFS(state);\n    case \"A*\":\n      return AStarSearch(state);\n    case \"Dijkstra\":\n      return DijkstraSearch(state);\n    default:\n      return [[], false];\n  }\n};\n\nexport const runSortAlgorithm = state => {\n  switch (state.sortAlgorithm) {\n    case \"Bubblesort\":\n      return bubbleSort(state);\n    case \"Quicksort\":\n      return quickSort(state);\n    default:\n      return [state.originalArray, state.originalArray.length];\n  }\n};\n\nconst quickSort = state => {};\n\nconst bubbleSort = state => {\n  var array = state.originalArray;\n  var idx = state.sortIndex;\n  if (idx >= array.length) {\n    return [array, idx];\n  }\n  var maxIndex = idx;\n  var maxValue = array[maxIndex];\n  for (var i = idx; i < array.length; i++) {\n    if (array[i] > maxValue) {\n      maxValue = array[i];\n      maxIndex = i;\n    }\n  }\n  var temp = array[idx];\n  array[idx] = maxValue;\n  array[maxIndex] = temp;\n\n  return [array, idx + 1];\n};\n\nexport const dist = (x, y, target = { x: END_X, y: END_Y }) => {\n  //return Math.sqrt(\n  //  (x - target.x) * (x - target.x) + (y - target.y) * (y - target.y)\n  //);\n  return Math.abs(x - target.x) + Math.abs(y - target.y);\n};\n\nexport const cost = (x, y, target = { x: END_X, y: END_Y }) => {\n  return Math.sqrt(\n    (x - target.x) * (x - target.x) + (y - target.y) * (y - target.y)\n  );\n};\n\nexport const DijkstraSearch = state => {\n  var neighbors = [];\n\n  const offsets = [\n    { x: 0, y: 1, from: \"UP\" },\n    { x: 1, y: 0, from: \"LEFT\" },\n    { x: 0, y: -1, from: \"DOWN\" },\n    { x: -1, y: 0, from: \"RIGHT\" }\n  ];\n  const { cells, visited, target, obstacles, dijkstra_dist } = state;\n\n  cells.sort((cell1, cell2) =>\n    dijkstra_dist[cell1.y][cell1.x] > dijkstra_dist[cell2.y][cell2.x] ? 1 : -1\n  );\n\n  for (var i = 0; i < cells.length; i++) {\n    var cell = cells[i];\n    if (cell.x === target.x && cell.y === target.y) return [neighbors, true];\n    visited[cell.y][cell.x] = true;\n\n    for (var j = 0; j < offsets.length; j++) {\n      var offset = offsets[j];\n      var nx = offset.x + cell.x;\n      var ny = offset.y + cell.y;\n      var direc = offset.from;\n      if (\n        nx >= 0 &&\n        ny >= 0 &&\n        ny < N_VERTICAL_CELLS &&\n        nx < N_HORIZONTAL_CELLS\n      ) {\n        if (!visited[ny][nx] && !obstacles[ny][nx]) {\n          const new_dist = dijkstra_dist[cell.y][cell.x] + 1;\n          if (new_dist < dijkstra_dist[ny][nx]) {\n            dijkstra_dist[ny][nx] = new_dist;\n            neighbors.push({ x: nx, y: ny, from: direc });\n            if (nx === target.x && ny === target.y) return [neighbors, true];\n            return [neighbors, false];\n          }\n        }\n      }\n    }\n  }\n  return [neighbors, false];\n};\n\nexport const AStarSearch = state => {\n  const offsets = [\n    { x: 0, y: 1, from: \"UP\" },\n    { x: 1, y: 0, from: \"LEFT\" },\n    { x: 0, y: -1, from: \"DOWN\" },\n    { x: -1, y: 0, from: \"RIGHT\" }\n  ];\n\n  const {\n    target,\n    obstacles,\n    openSet,\n    closedSet,\n    gScore,\n    fScore,\n    cameFrom\n  } = state;\n\n  if (openSet.length > 0) {\n    openSet.sort((cell1, cell2) =>\n      fScore[cell1.y][cell1.x] > fScore[cell2.y][cell2.x] ? 1 : -1\n    );\n    var current = openSet[0];\n    if (current.x === target.x && current.y === target.y) {\n      const path = generateAStarpath(cameFrom, current);\n      return [openSet, closedSet, true, path];\n    }\n\n    openSet.shift();\n    closedSet.push(current);\n\n    for (var j = 0; j < offsets.length; j++) {\n      var offset = offsets[j];\n      var nx = offset.x + current.x;\n      var ny = offset.y + current.y;\n      var direc = offset.from;\n      if (\n        nx >= 0 &&\n        ny >= 0 &&\n        ny < N_VERTICAL_CELLS &&\n        nx < N_HORIZONTAL_CELLS\n      ) {\n        const existing = closedSet.find(cell => cell.x === nx && cell.y === ny);\n        if (existing !== undefined || obstacles[ny][nx]) continue;\n        const tmp_gScore = gScore[current.y][current.x] + 1;\n        const existInOpen = openSet.find(\n          cell => cell.x === nx && cell.y === ny\n        );\n        if (existInOpen === undefined)\n          openSet.push({ x: nx, y: ny, from: direc });\n        if (tmp_gScore < gScore[ny][nx]) {\n          //cameFrom[{ x: nx, y: ny }] = direc;\n          //cameFrom.set({ x: nx, y: ny }, direc);\n          cameFrom[ny][nx] = direc;\n          gScore[ny][nx] = tmp_gScore;\n          fScore[ny][nx] =\n            gScore[ny][nx] +\n            dist(nx, ny, {\n              x: target.x,\n              y: target.y\n            });\n        }\n        if (nx === target.x && ny === target.y) {\n          const path = generateAStarpath(cameFrom, target);\n          return [openSet, closedSet, true, path];\n        }\n      }\n    }\n  }\n  return [openSet, closedSet, false, []];\n};\n\nexport const DFS = state => {\n  var neighbors = [];\n\n  const offsets = [\n    { x: 0, y: 1, from: \"UP\" },\n    { x: 1, y: 0, from: \"LEFT\" },\n    { x: 0, y: -1, from: \"DOWN\" },\n    { x: -1, y: 0, from: \"RIGHT\" }\n  ];\n  const { cells, visited, target, obstacles } = state;\n\n  if (cells.length) {\n    var cell = cells[cells.length - 1];\n    if (cell.x === target.x && cell.y === target.y) return [neighbors, true];\n    for (var j = 0; j < offsets.length; j++) {\n      var offset = offsets[j];\n      var nx = offset.x + cell.x;\n      var ny = offset.y + cell.y;\n      var direc = offset.from;\n      if (\n        nx >= 0 &&\n        ny >= 0 &&\n        ny < N_VERTICAL_CELLS &&\n        nx < N_HORIZONTAL_CELLS\n      ) {\n        if (!visited[ny][nx] && !obstacles[ny][nx]) {\n          visited[ny][nx] = true;\n          neighbors.push({ x: nx, y: ny, from: direc });\n          if (nx === target.x && ny === target.y) return [neighbors, true];\n          return [neighbors, false];\n        }\n      }\n    }\n  }\n  return [neighbors, false];\n};\n\nexport const BFS = state => {\n  var neighbors = [];\n  const offsets = [\n    { x: 0, y: 1, from: \"UP\" },\n    { x: 0, y: -1, from: \"DOWN\" },\n    { x: 1, y: 0, from: \"LEFT\" },\n    { x: -1, y: 0, from: \"RIGHT\" }\n  ];\n  const { cells, visited, target, obstacles } = state;\n  for (var i = 0; i < cells.length; i++) {\n    var cell = cells[i];\n    if (cell.x === target.x && cell.y === target.y) return [neighbors, true];\n\n    for (var j = 0; j < offsets.length; j++) {\n      var offset = offsets[j];\n      var nx = cell.x + offset.x;\n      var ny = cell.y + offset.y;\n      var direc = offset.from;\n      if (\n        nx >= 0 &&\n        ny >= 0 &&\n        ny < N_VERTICAL_CELLS &&\n        nx < N_HORIZONTAL_CELLS\n      ) {\n        if (!visited[ny][nx] && !obstacles[ny][nx]) {\n          visited[ny][nx] = true;\n          neighbors.push({ x: nx, y: ny, from: direc });\n          if (nx === target.x && ny === target.y) {\n            return [neighbors, true];\n          }\n        }\n      }\n    }\n  }\n\n  return [neighbors, false];\n};\n\nexport const generateAStarpath = (cameFrom, target) => {\n  var path = [];\n  var current = { x: target.x, y: target.y };\n  while (current.x !== START_X || current.y !== START_Y) {\n    path.push({ x: current.x, y: current.y });\n    switch (cameFrom[current.y][current.x]) {\n      case \"UP\":\n        current.y = current.y - 1;\n        break;\n      case \"DOWN\":\n        current.y = current.y + 1;\n        break;\n      case \"LEFT\":\n        current.x = current.x - 1;\n        break;\n      case \"RIGHT\":\n        current.x = current.x + 1;\n        break;\n      default:\n        break;\n    }\n  }\n  path.push({ x: START_X, y: START_Y, from: \"START\" });\n  return path;\n};\n\nexport const generatePath = (cells, target) => {\n  var current = { x: target.x, y: target.y, from: \"END\" };\n\n  var path = [];\n  while (current.x !== START_X || current.y !== START_Y) {\n    path.push({ x: current.x, y: current.y, from: current.from });\n    switch (current.from) {\n      case \"UP\":\n        current.y = current.y - 1;\n        break;\n      case \"DOWN\":\n        current.y = current.y + 1;\n        break;\n      case \"LEFT\":\n        current.x = current.x - 1;\n        break;\n      case \"RIGHT\":\n        current.x = current.x + 1;\n        break;\n      default:\n        break;\n    }\n    const prevCell = cells.find(\n      cell => cell.x === current.x && cell.y === current.y\n    );\n    if (prevCell) {\n      current.from = prevCell.from;\n    } else {\n      break;\n    }\n  }\n\n  path.push({ x: START_X, y: START_Y, from: \"START\" });\n  return path;\n};\n\nexport const generateMaze = state => {\n  // https://github.com/professor-l/mazes/blob/master/scripts/prims.js\n  var width = N_VERTICAL_CELLS;\n  var height = N_HORIZONTAL_CELLS;\n  var obstacles = Array.from({ length: width }, () =>\n    Array.from({ length: height }, () => true)\n  );\n  var start = [];\n  do {\n    start[0] = Math.floor(Math.random() * width);\n  } while (start[0] % 2 == 0);\n  do {\n    start[1] = Math.floor(Math.random() * height);\n  } while (start[1] % 2 == 0);\n  obstacles[START_Y][START_X] = false;\n  var openCells = [start];\n\n  while (openCells.length) {\n    var index = Math.floor(Math.random() * openCells.length);\n    var cell = openCells[index];\n    var nei = getNeighbors(obstacles, cell[0], cell[1]);\n\n    while (nei.length == 0) {\n      openCells.splice(index, 1);\n      if (openCells.length == 0) break;\n      index = Math.floor(Math.random() * openCells.length);\n      cell = openCells[index];\n      nei = getNeighbors(obstacles, cell[0], cell[1]);\n    }\n    if (openCells.length == 0) break;\n\n    var choice = nei[Math.floor(Math.random() * nei.length)];\n    openCells.push(choice);\n    if (nei.length == 1) openCells.splice(index, 1);\n\n    obstacles[choice[0]][choice[1]] = false;\n    obstacles[(choice[0] + cell[0]) / 2][(choice[1] + cell[1]) / 2] = false;\n  }\n  obstacles[state.target.y][state.target.x] = false;\n  return obstacles;\n};\n\nconst getNeighbors = (maze, ic, jc) => {\n  var res = [];\n  for (var i = 0; i < 4; i++) {\n    var nei = [ic, jc];\n    nei[i % 2] += Math.floor(i / 2) * 2 || -2;\n    if (\n      nei[0] < maze.length &&\n      nei[1] < maze[0].length &&\n      nei[0] >= 0 &&\n      nei[1] >= 0\n    ) {\n      if (maze[nei[0]][nei[1]] == true) res.push(nei);\n    }\n  }\n  return res;\n};\n\nexport const arrayToCells = array => {\n  var cells = [];\n  //var array = state.originalArray;\n  for (var x = 0; x < array.length; x++) {\n    for (var y = 0; y <= array[x]; y++) {\n      cells.push({ x: x, y: y });\n    }\n  }\n  return cells;\n};\n","import searchTypes from \"./search.types\";\nimport {\n  runSearchAlgorithm,\n  generatePath,\n  dist,\n  generateMaze\n} from \"../../utils/utils\";\nimport constants from \"../../utils/constants\";\n\nconst N_HORIZONTAL_CELLS = constants.N_HORIZONTAL_CELLS;\nconst N_VERTICAL_CELLS = constants.N_VERTICAL_CELLS;\nconst START_X = constants.START_X;\nconst START_Y = constants.START_Y;\nconst END_X = constants.END_X;\nconst END_Y = constants.END_Y;\nvar init_visited = Array.from({ length: N_VERTICAL_CELLS }, () =>\n  Array.from({ length: N_HORIZONTAL_CELLS }, () => false)\n);\n\nvar init_path = [];\nvar init_obstacles = Array.from({ length: N_VERTICAL_CELLS }, () =>\n  Array.from({ length: N_HORIZONTAL_CELLS }, () => false)\n);\n\nvar init_gScore = Array.from({ length: N_VERTICAL_CELLS }, () =>\n  Array.from({ length: N_HORIZONTAL_CELLS }, () => Number.POSITIVE_INFINITY)\n);\ninit_gScore[START_Y][START_X] = 0;\nvar init_fScore = Array.from({ length: N_VERTICAL_CELLS }, () =>\n  Array.from({ length: N_HORIZONTAL_CELLS }, () => Number.POSITIVE_INFINITY)\n);\ninit_fScore[START_Y][START_X] = dist(START_X, START_Y);\n\nvar init_dist = Array.from({ length: N_VERTICAL_CELLS }, () =>\n  Array.from({ length: N_HORIZONTAL_CELLS }, () => Number.POSITIVE_INFINITY)\n);\ninit_dist[START_Y][START_X] = 0;\n\nvar init_cameFrom = Array.from({ length: N_VERTICAL_CELLS }, () =>\n  Array.from({ length: N_HORIZONTAL_CELLS }, () => \"INIT\")\n);\ninit_cameFrom[START_Y][START_X] = \"START\";\ninit_cameFrom[END_Y][END_X] = \"END\";\n\nconst INITIAL_STATE = {\n  target: { x: END_X, y: END_Y },\n  isRunning: false,\n  searchDone: false,\n  foundTarget: false,\n  searchAlgorithm: \"\",\n  mazeAlgorithm: \"Prim\",\n  cells: [\n    {\n      x: START_X,\n      y: START_Y,\n      from: \"START\"\n    }\n  ],\n  fScore: init_fScore.map(row => [...row]),\n  gScore: init_fScore.map(row => [...row]),\n  openSet: [{ x: START_X, y: START_Y, from: \"START\" }],\n  closedSet: [],\n  cameFrom: init_cameFrom.map(row => [...row]),\n  dijkstra_dist: init_dist.map(row => [...row]),\n  path: init_path.map(cell => cell),\n  isAddingObstacles: false,\n  obstacles: init_obstacles.map(row => [...row]),\n  visited: init_visited.map(row => [...row]),\n  visited_open: init_visited.map(row => [...row])\n};\n\nconst searchReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case searchTypes.RUN_SEARCH:\n      var openSet = [];\n      var closedSet = [];\n      var foundTarget = false;\n      var neighbors = [];\n      var currentCells = [];\n      var path = [];\n      const result = runSearchAlgorithm(state);\n      if (result.length > 2) {\n        [openSet, closedSet, foundTarget, path] = result;\n        currentCells = openSet.concat(closedSet);\n        neighbors = openSet.concat(closedSet);\n      } else {\n        [neighbors, foundTarget] = result;\n        currentCells = state.cells.concat(neighbors);\n      }\n      //const [neighbors, foundTarget] = runSearchAlgorithm(state);\n      //currentCells = state.cells.concat(neighbors);\n      const { target } = state;\n\n      var toBeReturned = {\n        ...state,\n        isRunning: true,\n        searchDone: false,\n        foundTarget: false,\n        isAddingObstacles: false,\n        searchAlgorithm: state.searchAlgorithm,\n        openSet: openSet,\n        closedSet: closedSet,\n        path: state.path,\n        cells: currentCells,\n        visited: state.visited.map(row => [...row])\n      };\n\n      if (neighbors.length === 0 || foundTarget) {\n        toBeReturned.searchDone = true;\n        if (foundTarget) {\n          toBeReturned.foundTarget = true;\n          var currentPath = generatePath(currentCells, target);\n\n          toBeReturned.path = state.path.concat(currentPath);\n          if (result.length > 2) toBeReturned.path = path;\n        }\n      }\n      return toBeReturned;\n\n    case searchTypes.STOP_SEARCH:\n      return {\n        ...state,\n        isRunning: false\n      };\n    case searchTypes.CLEAR_SEARCH:\n      return {\n        ...state,\n        isRunning: false,\n        searchDone: false,\n        foundTarget: false,\n        //searchAlgorithm: \"\",\n        //sortAlgorithm: \"\",\n        cells: [\n          {\n            x: START_X,\n            y: START_Y,\n            from: \"START\"\n          }\n        ],\n        fScore: init_fScore.map(row => [...row]),\n        gScore: init_fScore.map(row => [...row]),\n        openSet: [{ x: START_X, y: START_Y, from: \"START\" }],\n        closedSet: [],\n        cameFrom: init_cameFrom.map(row => [...row]),\n        dijkstra_dist: init_dist.map(row => [...row]),\n        path: init_path.map(cell => cell),\n        isAddingObstacles: false,\n        obstacles: init_obstacles.map(row => [...row]),\n        visited: init_visited.map(row => [...row]),\n        visited_open: init_visited.map(row => [...row])\n      };\n    case searchTypes.DRAG_TARGET:\n      var newx = action.payload.x;\n      var newy = action.payload.y;\n      if (newx < 0) newx = 0;\n      if (newx >= N_HORIZONTAL_CELLS) newx = N_HORIZONTAL_CELLS - 1;\n      if (newy < 0) newy = 0;\n      if (newy >= N_VERTICAL_CELLS) newy = N_VERTICAL_CELLS - 1;\n      return {\n        ...state,\n        target: { x: newx, y: newy }\n      };\n    case searchTypes.ADD_OBSTACLE:\n      var newx = action.payload.x;\n      var newy = action.payload.y;\n      if (\n        newx >= 0 &&\n        newx < N_HORIZONTAL_CELLS &&\n        newy >= 0 &&\n        newy < N_VERTICAL_CELLS\n      ) {\n        const existing = state.obstacles[newy][newx];\n        if (!existing) {\n          state.obstacles[newy][newx] = true;\n          return {\n            ...state,\n            obstacles: state.obstacles.map(row => [...row])\n          };\n        }\n        return state;\n      }\n    case searchTypes.TOGGLE_ADD_OBSTACLE:\n      return {\n        ...state,\n        isAddingObstacles: !state.isAddingObstacles\n      };\n    case searchTypes.CLEAR_OBSTACLES:\n      return {\n        ...state,\n        obstacles: init_obstacles.map(row => [...row])\n      };\n    case searchTypes.SELECT_SEARCH_ALGORITHM:\n      return {\n        ...state,\n        searchDone: false,\n        cells: [\n          {\n            x: START_X,\n            y: START_Y,\n            from: \"START\"\n          }\n        ],\n        searchAlgorithm: action.payload\n      };\n    case searchTypes.SELECT_MAZE_ALGORITHM:\n      return {\n        ...state,\n        mazeAlgorithm: action.payload\n      };\n    case searchTypes.GENERATE_MAZE:\n      return {\n        ...state,\n        obstacles: generateMaze(state)\n      };\n    default:\n      return state;\n  }\n};\n\nexport default searchReducer;\n","import sortTypes from \"./sort.types\";\nimport { runSortAlgorithm, arrayToCells } from \"../../utils/utils\";\nimport constants from \"../../utils/constants\";\n\nconst N_HORIZONTAL_CELLS = constants.N_HORIZONTAL_CELLS;\nconst N_VERTICAL_CELLS = constants.N_VERTICAL_CELLS;\n\nconst INITIAL_STATE = {\n  isRunning: false,\n  searchDone: false,\n  sortAlgorithm: \"\",\n  cells: [],\n  originalArray: Array.from({ length: N_HORIZONTAL_CELLS }, () =>\n    Math.floor(Math.random() * N_VERTICAL_CELLS)\n  ),\n  sortIndex: 0\n};\n\nconst sortReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case sortTypes.RUN_SORT:\n      var nextArray = [];\n      var idx = 0;\n      //var isRunning = true;\n      var sortDone = false;\n      [nextArray, idx] = runSortAlgorithm(state);\n      var nextCells = arrayToCells(nextArray);\n      if (idx >= nextArray.length) {\n        //isRunning = false;\n        sortDone = true;\n      }\n      return {\n        ...state,\n        cells: nextCells,\n        sortIndex: idx,\n        isRunning: true,\n        searchDone: sortDone\n      };\n\n    case sortTypes.STOP_SORT:\n      return {\n        ...state,\n        isRunning: false\n      };\n    case sortTypes.CLEAR_SORT:\n      var nextCells = [];\n      var array = Array.from({ length: N_HORIZONTAL_CELLS }, () =>\n        Math.floor(Math.random() * N_VERTICAL_CELLS)\n      );\n\n      nextCells = arrayToCells(array);\n\n      return {\n        ...state,\n        isRunning: false,\n        searchDone: true,\n        sortIndex: 0,\n        originalArray: array,\n        cells: nextCells\n      };\n\n    case sortTypes.SELECT_SORT_ALGORITHM:\n      var arrayCells = arrayToCells(state.originalArray);\n\n      return {\n        ...state,\n        cells: arrayCells,\n        sortAlgorithm: action.payload,\n        sortIndex: 0\n      };\n    default:\n      return state;\n  }\n};\n\nexport default sortReducer;\n","import { combineReducers } from \"redux\";\n\nimport directoryReducer from \"../redux/directory/directory.reducer\";\nimport searchReducer from \"../redux/search/search.reducer\";\nimport sortReducer from \"../redux/sort/sort.reducer\";\n\nconst rootReducer = combineReducers({\n  directory: directoryReducer,\n  searchReducer: searchReducer,\n  sortReducer: sortReducer\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./redux/rootReducer\";\nimport logger from \"redux-logger\";\nimport timerMiddleware from \"redux-timer\";\n\nconst middlewares = [timerMiddleware];\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\n//const store = createStore(rootReducer, applyMiddleware(...middlewares));\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(...middlewares))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}