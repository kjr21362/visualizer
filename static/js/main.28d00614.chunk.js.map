{"version":3,"sources":["utils/constants.js","components/Header/Header.js","components/Cell/Cell.js","redux/search/search.types.js","redux/search/search.action.js","components/SearchBoard/SearchBoard.js","redux/sort/sort.types.js","redux/timer/timer.actions.js","components/SearchHeader/SearchHeader.js","components/SearchPage.js","redux/sort/sort.action.js","components/SortHeader/SortHeader.js","components/SortBoard/SortBoard.js","components/SortPage.js","components/Directory-item/Directory-item.js","components/Directory/Directory.js","components/App.js","redux/directory/directory.reducer.js","utils/utils.js","redux/search/search.reducer.js","redux/sort/sort.reducer.js","redux/rootReducer.js","index.js"],"names":["constants","APP_NAME","N_HORIZONTAL_CELLS","N_VERTICAL_CELLS","START_X","START_Y","END_X","END_Y","CELL_SIZE","WIDTH","HEIGHT","SEARCH_OPTIONS","MAZE_OPTIONS","SORT_OPTIONS","SEARCH","SORT","NO_ALGORITHM_SELECTED","Header","className","to","React","Component","Cell","this","props","x","y","color","key","style","left","top","width","height","backgroundColor","searchTypes","RUN_SEARCH","STOP_SEARCH","CLEAR_SEARCH","DRAG_TARGET","ADD_OBSTACLE","TOGGLE_ADD_OBSTACLE","CLEAR_OBSTACLES","SELECT_SEARCH_ALGORITHM","SELECT_MAZE_ALGORITHM","GENERATE_MAZE","toggleAddintObstacleState","type","selectSearchAlgorithm","algorithm","payload","SearchBoard","getBoardCoords","e","rect","boardRef","getBoundingClientRect","doc","document","documentElement","offset_x","window","pageXOffset","clientLeft","offset_y","pageYOffset","clientTop","clientX","clientY","updateTargetOnDrag","dragTarget","Math","floor","addObstacles","addObstacle","isAddingObstacles","searchCells","path","target","obstacles","onMouseDown","onmousemove","onMouseUp","id","ref","n","backgroundSize","draggable","onDragEnd","length","map","pathCell","cell","row","r_index","ele","c_index","connect","state","searchReducer","cells","dispatch","newPos","newObstacle","sortTypes","RUN_SORT","STOP_SORT","CLEAR_SORT","SELECT_SORT_ALGORITHM","stopTimerForAction","actionType","STOP_TIMER","name","startTimerForAction","START_TIMER","action","interval","search_options","maze_options","SearchHeader","option","label","isRunning","searchDone","dispatchWhenStop","options","value","onChange","onClick","dispatchWhenClear","SearchPage","selectSortAlgorithm","sort_options","SortHeader","sortReducer","SortBoard","quickSort_pivotCol","quickSort_lowCol","quickSort_movingCol","sortAlgorithm","SortPage","withRouter","title","imageUrl","size","history","linkUrl","match","push","backgroundImage","toUpperCase","sections","directory","otherSectionProps","App","basename","exact","component","Directory","INITIAL_STATE","directoryReducer","runSearchAlgorithm","searchAlgorithm","BFS","DFS","AStarSearch","DijkstraSearch","runSortAlgorithm","bubbleSort","quickSort","mergeSort","insertionSort","originalArray","insertionSort_savedState","savedState","shift","saved_i","saved_j","array","tmp","unshift","mergeSort_savedState","hi","saved_m","from","mid","min","newArray","merge","i","low","high","Array","j","k","quickSortIndexes","idxes","saved_pIdx","savedPivot","idx","sortIndex","maxIndex","maxValue","temp","dist","abs","neighbors","offsets","visited","dijkstra_dist","sort","cell1","cell2","offset","nx","ny","direc","new_dist","openSet","closedSet","gScore","fScore","cameFrom","current","generateAStarpath","undefined","find","tmp_gScore","generatePath","prevCell","generateMaze","start","random","openCells","index","nei","getNeighbors","splice","choice","maze","ic","jc","res","arrayToCells","init_visited","init_path","init_obstacles","Number","POSITIVE_INFINITY","init_fScore","init_dist","init_cameFrom","foundTarget","mazeAlgorithm","visited_open","currentCells","result","concat","toBeReturned","currentPath","newx","newy","existing","mergeSort_idxes","nextArray","sortDone","nextCells","arrayCells","rootReducer","combineReducers","middlewares","timerMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.28d00614.chunk.js","sourcesContent":["const constants = {\n  APP_NAME: \"visualizer\",\n  N_HORIZONTAL_CELLS: 41,\n  N_VERTICAL_CELLS: 25,\n  START_X: 4,\n  START_Y: 10,\n  END_X: 24,\n  END_Y: 17,\n  CELL_SIZE: 20,\n  WIDTH: 820,\n  HEIGHT: 500,\n  SEARCH_OPTIONS: [\"Search Algorithm\", \"BFS\", \"DFS\", \"A*\", \"Dijkstra\"],\n  MAZE_OPTIONS: [\"Prim\"],\n  SORT_OPTIONS: [\n    \"Sort Algorithm\",\n    \"Bubblesort\",\n    \"Quicksort\",\n    \"Mergesort\",\n    \"Insertionsort\"\n  ],\n  SEARCH: 0,\n  SORT: 1,\n  NO_ALGORITHM_SELECTED: -1\n};\n\nexport default constants;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Header.css\";\nimport constants from \"../../utils/constants\";\nconst APP_NAME = constants.APP_NAME;\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1 className=\"ui header\">\n          <Link to=\"/\" className=\"item\">\n            Visualizer\n          </Link>\n        </h1>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./Cell.css\";\nimport constants from \"../../utils/constants\";\n\nconst CELL_SIZE = constants.CELL_SIZE;\n\nclass Cell extends React.Component {\n  render() {\n    const { x, y, color, key } = this.props;\n    return (\n      <div\n        className=\"Cell\"\n        key={key}\n        style={{\n          left: `${x + 1}px`,\n          top: `${y + 1}px`,\n          width: `${CELL_SIZE - 1}px`,\n          height: `${CELL_SIZE - 1}px`,\n          backgroundColor: `${color}`\n        }}\n      ></div>\n    );\n  }\n}\n\nexport default Cell;\n","const searchTypes = {\n  RUN_SEARCH: \"RUN_SEARCH\",\n  STOP_SEARCH: \"STOP_SEARCH\",\n  CLEAR_SEARCH: \"CLEAR_SEARCH\",\n  DRAG_TARGET: \"DRAG_TARGET\",\n  ADD_OBSTACLE: \"ADD_OBSTACLE\",\n  TOGGLE_ADD_OBSTACLE: \"TOGGLE_ADD_OBSTACLE\",\n  CLEAR_OBSTACLES: \"CLEAR_OBSTACLES\",\n  SELECT_SEARCH_ALGORITHM: \"SELECT_SEARCH_ALGORITHM\",\n  SELECT_MAZE_ALGORITHM: \"SELECT_MAZE_ALGORITHM\",\n  GENERATE_MAZE: \"GENERATE_MAZE\"\n};\n\nexport default searchTypes;\n","import searchTypes from \"./search.types\";\n\nexport const toggleRunButton = () => ({\n  type: searchTypes.RUN_SEARCH\n});\n\nexport const toggleStopButton = () => ({\n  type: searchTypes.STOP_SEARCH\n});\n\nexport const toggleClearButton = () => ({\n  type: searchTypes.CLEAR_SEARCH\n});\n\nexport const dragTarget = newPos => ({\n  type: searchTypes.DRAG_TARGET,\n  payload: newPos\n});\n\nexport const toggleAddintObstacleState = () => ({\n  type: searchTypes.TOGGLE_ADD_OBSTACLE\n});\n\nexport const addObstacle = newObstacle => ({\n  type: searchTypes.ADD_OBSTACLE,\n  payload: newObstacle\n});\n\nexport const clearObstacles = () => ({\n  type: searchTypes.CLEAR_OBSTACLES\n});\n\nexport const selectSearchAlgorithm = algorithm => ({\n  type: searchTypes.SELECT_SEARCH_ALGORITHM,\n  payload: algorithm\n});\n\nexport const selectMazeAlgorithm = algorithm => ({\n  type: searchTypes.SELECT_MAZE_ALGORITHM,\n  payload: algorithm\n});\n\nexport const generateMaze = () => ({\n  type: searchTypes.GENERATE_MAZE\n});\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./SearchBoard.css\";\nimport Cell from \"../Cell/Cell\";\nimport key from \"weak-key\";\nimport constants from \"../../utils/constants\";\nimport {\n  dragTarget,\n  addObstacle,\n  toggleAddintObstacleState\n} from \"../../redux/search/search.action\";\n\nconst CELL_SIZE = constants.CELL_SIZE;\nconst WIDTH = constants.WIDTH;\nconst HEIGHT = constants.HEIGHT;\nconst START_X = constants.START_X;\nconst START_Y = constants.START_Y;\n\nclass SearchBoard extends React.Component {\n  getBoardCoords = e => {\n    var rect = this.boardRef.getBoundingClientRect();\n    var doc = document.documentElement;\n    var offset_x = rect.left + window.pageXOffset - doc.clientLeft;\n    var offset_y = rect.top + window.pageYOffset - doc.clientTop;\n\n    var x = e.clientX - offset_x;\n    var y = e.clientY - offset_y;\n    return [x, y];\n  };\n  updateTargetOnDrag = e => {\n    const { dragTarget } = this.props;\n    var [x, y] = this.getBoardCoords(e);\n    dragTarget({\n      x: Math.floor(x / CELL_SIZE),\n      y: Math.floor(y / CELL_SIZE)\n    });\n  };\n\n  addObstacles = e => {\n    const { addObstacle, isAddingObstacles } = this.props;\n    if (isAddingObstacles) {\n      var [x, y] = this.getBoardCoords(e);\n      addObstacle({\n        x: Math.floor(x / CELL_SIZE),\n        y: Math.floor(y / CELL_SIZE)\n      });\n    }\n  };\n\n  render() {\n    const {\n      searchCells,\n      path,\n      target,\n      obstacles,\n      toggleAddintObstacleState,\n      isAddingObstacles\n    } = this.props;\n\n    return (\n      <div\n        onMouseDown={e => {\n          if (isAddingObstacles) {\n            this.addObstacles(e);\n            this.boardRef.onmousemove = this.addObstacles;\n          }\n        }}\n        onMouseUp={() => {\n          if (isAddingObstacles) {\n            this.boardRef.onmousemove = null;\n            toggleAddintObstacleState();\n          }\n        }}\n        className=\"Board\"\n        id=\"Board\"\n        ref={n => {\n          this.boardRef = n;\n        }}\n        style={{\n          width: WIDTH,\n          height: HEIGHT,\n          backgroundSize: `${CELL_SIZE}px ${CELL_SIZE}px`\n        }}\n      >\n        <Cell\n          x={START_X * CELL_SIZE}\n          y={START_Y * CELL_SIZE}\n          key=\"START_CELL\"\n          color=\"white\"\n        ></Cell>\n\n        <div draggable=\"true\" onDragEnd={this.updateTargetOnDrag}>\n          <Cell\n            x={target.x * CELL_SIZE}\n            y={target.y * CELL_SIZE}\n            color=\"green\"\n            key=\"END_CELL\"\n          ></Cell>\n        </div>\n\n        {searchCells.length ? (\n          searchCells.map(pathCell =>\n            pathCell.x !== START_X || pathCell.y !== START_Y ? (\n              <Cell\n                x={pathCell.x * CELL_SIZE}\n                y={pathCell.y * CELL_SIZE}\n                key={key(pathCell)}\n              />\n            ) : (\n              <span></span>\n            )\n          )\n        ) : (\n          <span></span>\n        )}\n        {path.length ? (\n          path.map(cell => (\n            <Cell\n              x={cell.x * CELL_SIZE}\n              y={cell.y * CELL_SIZE}\n              key={key(cell)}\n              color=\"green\"\n            />\n          ))\n        ) : (\n          <span></span>\n        )}\n        {obstacles.map((row, r_index) =>\n          row.map((ele, c_index) =>\n            ele ? (\n              <Cell\n                x={c_index * CELL_SIZE}\n                y={r_index * CELL_SIZE}\n                color=\"grey\"\n              />\n            ) : (\n              <span></span>\n            )\n          )\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  searchCells: state.searchReducer.cells,\n  path: state.searchReducer.path,\n  target: state.searchReducer.target,\n  obstacles: state.searchReducer.obstacles,\n  isAddingObstacles: state.searchReducer.isAddingObstacles\n});\n\nconst mapDispatchToProps = dispatch => ({\n  dragTarget: newPos => dispatch(dragTarget(newPos)),\n  addObstacle: newObstacle => dispatch(addObstacle(newObstacle)),\n  toggleAddintObstacleState: () => dispatch(toggleAddintObstacleState())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBoard);\n","const sortTypes = {\n  RUN_SORT: \"RUN_SORT\",\n  STOP_SORT: \"STOP_SORT\",\n  CLEAR_SORT: \"CLEAR_SORT\",\n  SELECT_SORT_ALGORITHM: \"SELECT_SORT_ALGORITHM\"\n};\n\nexport default sortTypes;\n","import { START_TIMER, STOP_TIMER } from \"redux-timer\";\nimport searchTypes from \"../search/search.types\";\nimport sortTypes from \"../sort/sort.types\";\nimport constants from \"../../utils/constants\";\n\nexport const stopTimerForAction = (dispatch, actionType) => {\n  switch (actionType) {\n    case constants.SEARCH:\n      dispatch({\n        type: STOP_TIMER,\n        payload: {\n          name: \"searchTimer\"\n        }\n      });\n      break;\n    case constants.SORT:\n      dispatch({\n        type: STOP_TIMER,\n        payload: {\n          name: \"sortTimer\"\n        }\n      });\n  }\n};\n\nexport const startTimerForAction = (dispatch, actionType) => {\n  switch (actionType) {\n    case constants.SEARCH:\n      dispatch({\n        type: START_TIMER,\n        payload: {\n          name: \"searchTimer\",\n          action: searchTypes.RUN_SEARCH,\n          interval: 100\n        }\n      });\n      break;\n    case constants.SORT:\n      dispatch({\n        type: START_TIMER,\n        payload: {\n          name: \"sortTimer\",\n          action: sortTypes.RUN_SORT,\n          interval: 100\n        }\n      });\n      break;\n    default:\n      break;\n  }\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\nimport \"./SearchHeader.css\";\nimport {\n  startTimerForAction,\n  stopTimerForAction\n} from \"../../redux/timer/timer.actions\";\nimport {\n  toggleStopButton,\n  toggleClearButton,\n  toggleAddintObstacleState,\n  clearObstacles,\n  selectSearchAlgorithm,\n  selectMazeAlgorithm,\n  generateMaze\n} from \"../../redux/search/search.action\";\nimport constants from \"../../utils/constants\";\n\nconst search_options = constants.SEARCH_OPTIONS;\nconst maze_options = constants.MAZE_OPTIONS;\n\nclass SearchHeader extends React.Component {\n  _onSelect(option) {\n    //console.log(option.label);\n    this.props.dispatch(selectSearchAlgorithm(option.label));\n  }\n  render() {\n    const { isRunning, dispatch, searchDone, isAddingObstacles } = this.props;\n    if (searchDone) {\n      dispatchWhenStop(this.props);\n    }\n    return (\n      <div className=\"ui secondary pointing menu\">\n        <Dropdown\n          options={search_options}\n          value={search_options[0]}\n          onChange={option => {\n            this.props.dispatch(selectSearchAlgorithm(option.label));\n          }}\n        />\n        <Dropdown\n          options={maze_options}\n          value={maze_options[0]}\n          onChange={option => {\n            this.props.dispatch(selectMazeAlgorithm(option.label));\n          }}\n        />\n\n        <button\n          className=\"ui primary button\"\n          onClick={() => {\n            isRunning\n              ? dispatchWhenStop(this.props)\n              : startTimerForAction(this.props.dispatch, constants.SEARCH);\n          }}\n        >\n          {isRunning ? \"Stop!\" : \"Run!\"}\n        </button>\n\n        <button\n          className=\"ui primary button\"\n          onClick={() => {\n            dispatchWhenClear(this.props);\n          }}\n        >\n          Clear!\n        </button>\n\n        <button\n          className=\"ui primary button\"\n          onClick={() => {\n            this.props.dispatch(toggleAddintObstacleState());\n          }}\n        >\n          {isAddingObstacles ? \"Drag to add obstacles!\" : \"Add Obstacles!\"}\n        </button>\n\n        <button\n          className=\"ui primary button\"\n          onClick={() => {\n            this.props.dispatch(clearObstacles());\n          }}\n        >\n          Clear Obstacles!\n        </button>\n\n        <button\n          className=\"ui primary button\"\n          onClick={() => {\n            this.props.dispatch(generateMaze());\n          }}\n        >\n          Generate Maze!\n        </button>\n      </div>\n    );\n  }\n}\n\nconst dispatchWhenClear = props => {\n  //props.dispatch(stopTimer());\n  stopTimerForAction(props.dispatch, constants.SEARCH);\n  props.dispatch(toggleClearButton());\n};\n\nconst dispatchWhenStop = props => {\n  //props.dispatch(stopTimer());\n  stopTimerForAction(props.dispatch, constants.SEARCH);\n  props.dispatch(toggleStopButton());\n};\n\nconst mapStateToProps = state => ({\n  isRunning: state.searchReducer.isRunning,\n  searchDone: state.searchReducer.searchDone,\n  isAddingObstacles: state.searchReducer.isAddingObstacles\n});\n\nexport default connect(mapStateToProps)(SearchHeader);\n","import React from \"react\";\nimport SearchBoard from \"../components/SearchBoard/SearchBoard\";\nimport SearchHeader from \"../components/SearchHeader/SearchHeader\";\n\nconst SearchPage = () => {\n  return (\n    <div>\n      <SearchHeader />\n      <SearchBoard />\n    </div>\n  );\n};\n\nexport default SearchPage;\n","import sortTypes from \"./sort.types\";\n\nexport const toggleRunButton = () => ({\n  type: sortTypes.RUN_SORT\n});\n\nexport const toggleStopButton = () => ({\n  type: sortTypes.STOP_SORT\n});\n\nexport const toggleClearButton = () => ({\n  type: sortTypes.CLEAR_SORT\n});\n\nexport const selectSortAlgorithm = algorithm => ({\n  type: sortTypes.SELECT_SORT_ALGORITHM,\n  payload: algorithm\n});\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\nimport \"./SortHeader.css\";\nimport {\n  startTimerForAction,\n  stopTimerForAction\n} from \"../../redux/timer/timer.actions\";\nimport {\n  toggleStopButton,\n  toggleClearButton,\n  selectSortAlgorithm\n} from \"../../redux/sort/sort.action\";\nimport constants from \"../../utils/constants\";\n\nconst sort_options = constants.SORT_OPTIONS;\n\nclass SortHeader extends React.Component {\n  _onSelect(option) {\n    //console.log(option.label);\n    this.props.dispatch(selectSortAlgorithm(option.label));\n  }\n  render() {\n    const { isRunning, dispatch, searchDone } = this.props;\n    if (searchDone) {\n      dispatchWhenStop(this.props);\n    }\n    return (\n      <div className=\"ui secondary pointing menu\">\n        <Dropdown\n          options={sort_options}\n          value={sort_options[0]}\n          onChange={option => {\n            this.props.dispatch(selectSortAlgorithm(option.label));\n          }}\n        />\n\n        <button\n          className=\"ui primary button\"\n          onClick={() => {\n            isRunning\n              ? dispatchWhenStop(this.props)\n              : startTimerForAction(this.props.dispatch, constants.SORT);\n          }}\n        >\n          {isRunning ? \"Stop!\" : \"Run!\"}\n        </button>\n        <button\n          className=\"ui primary button\"\n          onClick={() => {\n            dispatchWhenClear(this.props);\n          }}\n        >\n          Clear!\n        </button>\n      </div>\n    );\n  }\n}\n\nconst dispatchWhenClear = props => {\n  //props.dispatch(stopTimer());\n  stopTimerForAction(props.dispatch, constants.SORT);\n  props.dispatch(toggleClearButton());\n};\n\nconst dispatchWhenStop = props => {\n  //props.dispatch(stopTimer());\n  stopTimerForAction(props.dispatch, constants.SORT);\n  props.dispatch(toggleStopButton());\n};\n\nconst mapStateToProps = state => ({\n  isRunning: state.sortReducer.isRunning,\n  searchDone: state.sortReducer.searchDone\n});\n\nexport default connect(mapStateToProps)(SortHeader);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./SortBoard.css\";\nimport Cell from \"../Cell/Cell\";\nimport key from \"weak-key\";\nimport constants from \"../../utils/constants\";\n\nconst CELL_SIZE = constants.CELL_SIZE;\nconst WIDTH = constants.WIDTH;\nconst HEIGHT = constants.HEIGHT;\n\nclass SortBoard extends React.Component {\n  getBoardCoords = e => {\n    var rect = this.boardRef.getBoundingClientRect();\n    var doc = document.documentElement;\n    var offset_x = rect.left + window.pageXOffset - doc.clientLeft;\n    var offset_y = rect.top + window.pageYOffset - doc.clientTop;\n\n    var x = e.clientX - offset_x;\n    var y = e.clientY - offset_y;\n    return [x, y];\n  };\n  updateTargetOnDrag = e => {\n    const { dragTarget } = this.props;\n    var [x, y] = this.getBoardCoords(e);\n    dragTarget({\n      x: Math.floor(x / CELL_SIZE),\n      y: Math.floor(y / CELL_SIZE)\n    });\n  };\n\n  render() {\n    const {\n      cells,\n      toggleAddintObstacleState,\n      isAddingObstacles,\n      quickSort_pivotCol,\n      quickSort_lowCol,\n      quickSort_movingCol,\n      sortAlgorithm\n    } = this.props;\n\n    return (\n      <div\n        onMouseDown={e => {\n          if (isAddingObstacles) {\n            this.addObstacles(e);\n            this.boardRef.onmousemove = this.addObstacles;\n          }\n        }}\n        onMouseUp={() => {\n          if (isAddingObstacles) {\n            this.boardRef.onmousemove = null;\n            toggleAddintObstacleState();\n          }\n        }}\n        className=\"Board\"\n        id=\"Board\"\n        ref={n => {\n          this.boardRef = n;\n        }}\n        style={{\n          width: WIDTH,\n          height: HEIGHT,\n          backgroundSize: `${CELL_SIZE}px ${CELL_SIZE}px`\n        }}\n      >\n        {cells.length ? (\n          cells.map(pathCell => (\n            <Cell\n              x={pathCell.x * CELL_SIZE}\n              y={pathCell.y * CELL_SIZE}\n              key={key(pathCell)}\n              color={\n                sortAlgorithm == \"Quicksort\"\n                  ? pathCell.x == quickSort_lowCol\n                    ? \"blue\"\n                    : pathCell.x == quickSort_movingCol\n                    ? \"green\"\n                    : pathCell.x == quickSort_pivotCol\n                    ? \"red\"\n                    : \"gray\"\n                  : \"gray\"\n              }\n            />\n          ))\n        ) : (\n          <span></span>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  cells: state.sortReducer.cells,\n  sortAlgorithm: state.sortReducer.sortAlgorithm,\n  quickSort_pivotCol: state.sortReducer.quickSort_pivotCol,\n  quickSort_lowCol: state.sortReducer.quickSort_lowCol,\n  quickSort_movingCol: state.sortReducer.quickSort_movingCol\n});\n\nconst mapDispatchToProps = dispatch => ({});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SortBoard);\n","import React from \"react\";\nimport SortHeader from \"../components/SortHeader/SortHeader\";\nimport SortBoard from \"../components/SortBoard/SortBoard\";\n\nconst SortPage = () => {\n  return (\n    <div>\n      <SortHeader />\n      <SortBoard />\n    </div>\n  );\n};\n\nexport default SortPage;\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./Directory-item.scss\";\nimport constants from \"../../utils/constants\";\nconst APP_NAME = constants.APP_NAME;\n\nconst DirectoryItem = ({ title, imageUrl, size, history, linkUrl, match }) => (\n  <div\n    className={`${size} directory-item`}\n    onClick={() => history.push(`${linkUrl}`)}\n  >\n    <div\n      className=\"background-image\"\n      style={{ backgroundImage: `url(${imageUrl})` }}\n    />\n    <div className=\"content\">\n      <h1 className=\"title\">{title.toUpperCase()}</h1>\n    </div>\n  </div>\n);\n\nexport default withRouter(DirectoryItem);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport DirectoryItem from \"../Directory-item/Directory-item\";\nimport \"./Directory.scss\";\n\nconst Directory = ({ sections }) => (\n  <div className=\"directory-menu\">\n    {sections.map(({ id, ...otherSectionProps }) => (\n      <DirectoryItem key={id} {...otherSectionProps} />\n    ))}\n  </div>\n);\n\nconst mapStateToProps = state => ({\n  sections: state.directory.sections\n});\n\nexport default connect(mapStateToProps)(Directory);\n","import React from \"react\";\nimport Header from \"../components/Header/Header\";\nimport { BrowserRouter, Route, HashRouter } from \"react-router-dom\";\nimport SearchPage from \"./SearchPage\";\nimport SortPage from \"./SortPage\";\nimport Directory from \"../components/Directory/Directory\";\nimport constants from \"../utils/constants\";\nconst APP_NAME = constants.APP_NAME;\n\nconst App = () => {\n  return (\n    <div className=\"ui container\">\n      <HashRouter basename=\"/\">\n        <div>\n          <Header />\n          <Route path=\"/\" exact component={Directory} />\n          <Route path=\"/search\" exact component={SearchPage} />\n          <Route path=\"/sort\" exact component={SortPage} />\n        </div>\n      </HashRouter>\n    </div>\n  );\n};\n\nexport default App;\n","const INITIAL_STATE = {\n  sections: [\n    {\n      title: \"search\",\n      imageUrl:\n        \"https://s3.amazonaws.com/dev.assets.neo4j.com/wp-content/uploads/20181010052900/breadth-first-search-graph-algorithm-example.png\",\n      id: 1,\n      linkUrl: \"/search\"\n    },\n    {\n      title: \"sort\",\n      imageUrl: \"https://miro.medium.com/max/7680/1*s0r4FadYBWCbqS1TAd5OJQ.png\",\n      id: 2,\n      linkUrl: \"/sort\"\n    }\n  ]\n};\n\nconst directoryReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nexport default directoryReducer;\n","import constants from \"../utils/constants\";\n\nconst N_HORIZONTAL_CELLS = constants.N_HORIZONTAL_CELLS;\nconst N_VERTICAL_CELLS = constants.N_VERTICAL_CELLS;\nconst START_X = constants.START_X;\nconst START_Y = constants.START_Y;\nconst END_X = constants.END_X;\nconst END_Y = constants.END_Y;\n\nexport const runSearchAlgorithm = state => {\n  switch (state.searchAlgorithm) {\n    case \"BFS\":\n      return BFS(state);\n    case \"DFS\":\n      return DFS(state);\n    case \"A*\":\n      return AStarSearch(state);\n    case \"Dijkstra\":\n      return DijkstraSearch(state);\n    default:\n      return [[], false];\n  }\n};\n\nexport const runSortAlgorithm = state => {\n  switch (state.sortAlgorithm) {\n    case \"Bubblesort\":\n      return bubbleSort(state);\n    case \"Quicksort\":\n      return quickSort(state);\n    case \"Mergesort\":\n      return mergeSort(state);\n    case \"Insertionsort\":\n      return insertionSort(state);\n    default:\n      return [state.originalArray, state.originalArray.length];\n  }\n};\n\nconst insertionSort = state => {\n  if (state.insertionSort_savedState.length == 0) {\n    return [state.originalArray, state.originalArray.length];\n  }\n  var savedState = state.insertionSort_savedState.shift();\n  var saved_i = savedState[0];\n  var saved_j = savedState[1];\n  var array = state.originalArray;\n\n  if (saved_j > 0 && array[saved_j - 1] > array[saved_j]) {\n    var tmp = array[saved_j - 1];\n    array[saved_j - 1] = array[saved_j];\n    array[saved_j] = tmp;\n    state.insertionSort_savedState.unshift([saved_i, saved_j - 1]);\n  } else if (saved_i + 1 < state.originalArray.length) {\n    state.insertionSort_savedState.unshift([saved_i + 1, saved_i + 1]);\n  }\n  return [array, 0];\n};\n\nconst mergeSort = state => {\n  if (state.mergeSort_savedState.length == 0) {\n    return [state.originalArray, state.originalArray.length];\n  }\n  var lo = 0;\n  var hi = state.originalArray.length - 1;\n\n  var array = state.originalArray;\n  var savedState = state.mergeSort_savedState.shift();\n  var saved_m = savedState[0];\n  var saved_i = savedState[1];\n\n  var from = saved_i;\n  var mid = saved_i + saved_m - 1;\n  var to = Math.min(saved_i + 2 * saved_m - 1, hi);\n  var newArray = merge(array, from, mid, to);\n\n  for (var i = from; i <= to; i++) {\n    array[i] = newArray[i - from];\n  }\n\n  if (saved_i + 2 * saved_m < hi) {\n    state.mergeSort_savedState.unshift([saved_m, saved_i + 2 * saved_m]);\n  } else if (2 * saved_m <= hi - lo) {\n    state.mergeSort_savedState.unshift([2 * saved_m, lo]);\n  }\n\n  return [array, 0];\n};\n\nconst merge = (array, low, mid, high) => {\n  var newArray = new Array(high - low + 1);\n  var i = low;\n  var j = mid + 1;\n  var k = 0;\n\n  while (i <= mid && j <= high) {\n    if (array[i] <= array[j]) {\n      newArray[k] = array[i];\n      i++;\n      k++;\n    } else {\n      newArray[k] = array[j];\n      j++;\n      k++;\n    }\n  }\n  while (i <= mid) {\n    newArray[k] = array[i];\n    i++;\n    k++;\n  }\n  while (j <= high) {\n    newArray[k] = array[j];\n    j++;\n    k++;\n  }\n\n  return newArray;\n};\n\nconst quickSort = state => {\n  if (state.quickSortIndexes.length == 0) {\n    return [state.originalArray, state.originalArray.length];\n  }\n  const idxes = state.quickSortIndexes.shift();\n  var low = idxes[0];\n  var high = idxes[1];\n  var saved_pIdx = idxes[2];\n  var savedPivot = state.originalArray[saved_pIdx];\n  var saved_i = idxes[3];\n  var saved_j = idxes[4];\n\n  if (low >= high) {\n    return [state.originalArray, 0];\n  }\n\n  var array = state.originalArray;\n  //const p = partition(state.originalArray, low, high);\n  if (saved_j < high) {\n    if (array[saved_j] < savedPivot) {\n      const tmp = array[saved_j];\n      array[saved_j] = array[saved_i];\n      array[saved_i] = tmp;\n      saved_i++;\n    }\n  }\n  saved_j++;\n\n  state.quickSort_pivotCol = saved_pIdx;\n  state.quickSort_lowCol = saved_i;\n  state.quickSort_movingCol = saved_j;\n\n  if (saved_j >= high) {\n    const tmp = array[high];\n    array[high] = array[saved_i];\n    array[saved_i] = tmp;\n\n    state.quickSortIndexes.unshift([\n      saved_i + 1,\n      high,\n      high,\n      saved_i + 1,\n      saved_i + 1\n    ]);\n    state.quickSortIndexes.unshift([low, saved_i - 1, saved_i - 1, low, low]);\n  } else {\n    state.quickSortIndexes.unshift([low, high, saved_pIdx, saved_i, saved_j]);\n  }\n\n  //state.quickSortIndexes.unshift([p + 1, high]);\n  //state.quickSortIndexes.unshift([low, p - 1]);\n  return [state.originalArray, 0];\n};\n\nconst partition = (array, lo, hi) => {\n  const pivot = array[hi];\n  var i = lo;\n  for (var j = lo; j <= hi; j++) {\n    if (array[j] < pivot) {\n      const tmp = array[j];\n      array[j] = array[i];\n      array[i] = tmp;\n      i++;\n    }\n  }\n  const tmp = array[hi];\n  array[hi] = array[i];\n  array[i] = tmp;\n  return i;\n};\n\nconst bubbleSort = state => {\n  var array = state.originalArray;\n  var idx = state.sortIndex;\n  if (idx >= array.length) {\n    return [array, idx];\n  }\n  var maxIndex = idx;\n  var maxValue = array[maxIndex];\n  for (var i = idx; i < array.length; i++) {\n    if (array[i] > maxValue) {\n      maxValue = array[i];\n      maxIndex = i;\n    }\n  }\n  var temp = array[idx];\n  array[idx] = maxValue;\n  array[maxIndex] = temp;\n\n  return [array, idx + 1];\n};\n\nexport const dist = (x, y, target = { x: END_X, y: END_Y }) => {\n  return Math.abs(x - target.x) + Math.abs(y - target.y);\n};\n\nexport const cost = (x, y, target = { x: END_X, y: END_Y }) => {\n  return Math.sqrt(\n    (x - target.x) * (x - target.x) + (y - target.y) * (y - target.y)\n  );\n};\n\nexport const DijkstraSearch = state => {\n  var neighbors = [];\n\n  const offsets = [\n    { x: 0, y: 1, from: \"UP\" },\n    { x: 1, y: 0, from: \"LEFT\" },\n    { x: 0, y: -1, from: \"DOWN\" },\n    { x: -1, y: 0, from: \"RIGHT\" }\n  ];\n  const { cells, visited, target, obstacles, dijkstra_dist } = state;\n\n  cells.sort((cell1, cell2) =>\n    dijkstra_dist[cell1.y][cell1.x] > dijkstra_dist[cell2.y][cell2.x] ? 1 : -1\n  );\n\n  for (var i = 0; i < cells.length; i++) {\n    var cell = cells[i];\n    if (cell.x === target.x && cell.y === target.y) return [neighbors, true];\n    visited[cell.y][cell.x] = true;\n\n    for (var j = 0; j < offsets.length; j++) {\n      var offset = offsets[j];\n      var nx = offset.x + cell.x;\n      var ny = offset.y + cell.y;\n      var direc = offset.from;\n      if (\n        nx >= 0 &&\n        ny >= 0 &&\n        ny < N_VERTICAL_CELLS &&\n        nx < N_HORIZONTAL_CELLS\n      ) {\n        if (!visited[ny][nx] && !obstacles[ny][nx]) {\n          const new_dist = dijkstra_dist[cell.y][cell.x] + 1;\n          if (new_dist < dijkstra_dist[ny][nx]) {\n            dijkstra_dist[ny][nx] = new_dist;\n            neighbors.push({ x: nx, y: ny, from: direc });\n            if (nx === target.x && ny === target.y) return [neighbors, true];\n            return [neighbors, false];\n          }\n        }\n      }\n    }\n  }\n  return [neighbors, false];\n};\n\nexport const AStarSearch = state => {\n  const offsets = [\n    { x: 0, y: 1, from: \"UP\" },\n    { x: 1, y: 0, from: \"LEFT\" },\n    { x: 0, y: -1, from: \"DOWN\" },\n    { x: -1, y: 0, from: \"RIGHT\" }\n  ];\n\n  const {\n    target,\n    obstacles,\n    openSet,\n    closedSet,\n    gScore,\n    fScore,\n    cameFrom\n  } = state;\n\n  if (openSet.length > 0) {\n    openSet.sort((cell1, cell2) =>\n      fScore[cell1.y][cell1.x] > fScore[cell2.y][cell2.x] ? 1 : -1\n    );\n    var current = openSet[0];\n    if (current.x === target.x && current.y === target.y) {\n      const path = generateAStarpath(cameFrom, current);\n      return [openSet, closedSet, true, path];\n    }\n\n    openSet.shift();\n    closedSet.push(current);\n\n    for (var j = 0; j < offsets.length; j++) {\n      var offset = offsets[j];\n      var nx = offset.x + current.x;\n      var ny = offset.y + current.y;\n      var direc = offset.from;\n      if (\n        nx >= 0 &&\n        ny >= 0 &&\n        ny < N_VERTICAL_CELLS &&\n        nx < N_HORIZONTAL_CELLS\n      ) {\n        const existing = closedSet.find(cell => cell.x === nx && cell.y === ny);\n        if (existing !== undefined || obstacles[ny][nx]) continue;\n        const tmp_gScore = gScore[current.y][current.x] + 1;\n        const existInOpen = openSet.find(\n          cell => cell.x === nx && cell.y === ny\n        );\n        if (existInOpen === undefined)\n          openSet.push({ x: nx, y: ny, from: direc });\n        if (tmp_gScore < gScore[ny][nx]) {\n          //cameFrom[{ x: nx, y: ny }] = direc;\n          //cameFrom.set({ x: nx, y: ny }, direc);\n          cameFrom[ny][nx] = direc;\n          gScore[ny][nx] = tmp_gScore;\n          fScore[ny][nx] =\n            gScore[ny][nx] +\n            dist(nx, ny, {\n              x: target.x,\n              y: target.y\n            });\n        }\n        if (nx === target.x && ny === target.y) {\n          const path = generateAStarpath(cameFrom, target);\n          return [openSet, closedSet, true, path];\n        }\n      }\n    }\n  }\n  return [openSet, closedSet, false, []];\n};\n\nexport const DFS = state => {\n  var neighbors = [];\n\n  const offsets = [\n    { x: 0, y: 1, from: \"UP\" },\n    { x: 1, y: 0, from: \"LEFT\" },\n    { x: 0, y: -1, from: \"DOWN\" },\n    { x: -1, y: 0, from: \"RIGHT\" }\n  ];\n  const { cells, visited, target, obstacles } = state;\n\n  if (cells.length) {\n    var cell = cells[cells.length - 1];\n    if (cell.x === target.x && cell.y === target.y) return [neighbors, true];\n    for (var j = 0; j < offsets.length; j++) {\n      var offset = offsets[j];\n      var nx = offset.x + cell.x;\n      var ny = offset.y + cell.y;\n      var direc = offset.from;\n      if (\n        nx >= 0 &&\n        ny >= 0 &&\n        ny < N_VERTICAL_CELLS &&\n        nx < N_HORIZONTAL_CELLS\n      ) {\n        if (!visited[ny][nx] && !obstacles[ny][nx]) {\n          visited[ny][nx] = true;\n          neighbors.push({ x: nx, y: ny, from: direc });\n          if (nx === target.x && ny === target.y) return [neighbors, true];\n          return [neighbors, false];\n        }\n      }\n    }\n  }\n  return [neighbors, false];\n};\n\nexport const BFS = state => {\n  var neighbors = [];\n  const offsets = [\n    { x: 0, y: 1, from: \"UP\" },\n    { x: 0, y: -1, from: \"DOWN\" },\n    { x: 1, y: 0, from: \"LEFT\" },\n    { x: -1, y: 0, from: \"RIGHT\" }\n  ];\n  const { cells, visited, target, obstacles } = state;\n  for (var i = 0; i < cells.length; i++) {\n    var cell = cells[i];\n    if (cell.x === target.x && cell.y === target.y) return [neighbors, true];\n\n    for (var j = 0; j < offsets.length; j++) {\n      var offset = offsets[j];\n      var nx = cell.x + offset.x;\n      var ny = cell.y + offset.y;\n      var direc = offset.from;\n      if (\n        nx >= 0 &&\n        ny >= 0 &&\n        ny < N_VERTICAL_CELLS &&\n        nx < N_HORIZONTAL_CELLS\n      ) {\n        if (!visited[ny][nx] && !obstacles[ny][nx]) {\n          visited[ny][nx] = true;\n          neighbors.push({ x: nx, y: ny, from: direc });\n          if (nx === target.x && ny === target.y) {\n            return [neighbors, true];\n          }\n        }\n      }\n    }\n  }\n\n  return [neighbors, false];\n};\n\nexport const generateAStarpath = (cameFrom, target) => {\n  var path = [];\n  var current = { x: target.x, y: target.y };\n  while (current.x !== START_X || current.y !== START_Y) {\n    path.push({ x: current.x, y: current.y });\n    switch (cameFrom[current.y][current.x]) {\n      case \"UP\":\n        current.y = current.y - 1;\n        break;\n      case \"DOWN\":\n        current.y = current.y + 1;\n        break;\n      case \"LEFT\":\n        current.x = current.x - 1;\n        break;\n      case \"RIGHT\":\n        current.x = current.x + 1;\n        break;\n      default:\n        break;\n    }\n  }\n  path.push({ x: START_X, y: START_Y, from: \"START\" });\n  return path;\n};\n\nexport const generatePath = (cells, target) => {\n  var current = { x: target.x, y: target.y, from: \"END\" };\n\n  var path = [];\n  while (current.x !== START_X || current.y !== START_Y) {\n    path.push({ x: current.x, y: current.y, from: current.from });\n    switch (current.from) {\n      case \"UP\":\n        current.y = current.y - 1;\n        break;\n      case \"DOWN\":\n        current.y = current.y + 1;\n        break;\n      case \"LEFT\":\n        current.x = current.x - 1;\n        break;\n      case \"RIGHT\":\n        current.x = current.x + 1;\n        break;\n      default:\n        break;\n    }\n    const prevCell = cells.find(\n      cell => cell.x === current.x && cell.y === current.y\n    );\n    if (prevCell) {\n      current.from = prevCell.from;\n    } else {\n      break;\n    }\n  }\n\n  path.push({ x: START_X, y: START_Y, from: \"START\" });\n  return path;\n};\n\nexport const generateMaze = state => {\n  // https://github.com/professor-l/mazes/blob/master/scripts/prims.js\n  var width = N_VERTICAL_CELLS;\n  var height = N_HORIZONTAL_CELLS;\n  var obstacles = Array.from({ length: width }, () =>\n    Array.from({ length: height }, () => true)\n  );\n  var start = [];\n  do {\n    start[0] = Math.floor(Math.random() * width);\n  } while (start[0] % 2 == 0);\n  do {\n    start[1] = Math.floor(Math.random() * height);\n  } while (start[1] % 2 == 0);\n  obstacles[START_Y][START_X] = false;\n  var openCells = [start];\n\n  while (openCells.length) {\n    var index = Math.floor(Math.random() * openCells.length);\n    var cell = openCells[index];\n    var nei = getNeighbors(obstacles, cell[0], cell[1]);\n\n    while (nei.length == 0) {\n      openCells.splice(index, 1);\n      if (openCells.length == 0) break;\n      index = Math.floor(Math.random() * openCells.length);\n      cell = openCells[index];\n      nei = getNeighbors(obstacles, cell[0], cell[1]);\n    }\n    if (openCells.length == 0) break;\n\n    var choice = nei[Math.floor(Math.random() * nei.length)];\n    openCells.push(choice);\n    if (nei.length == 1) openCells.splice(index, 1);\n\n    obstacles[choice[0]][choice[1]] = false;\n    obstacles[(choice[0] + cell[0]) / 2][(choice[1] + cell[1]) / 2] = false;\n  }\n  obstacles[state.target.y][state.target.x] = false;\n  return obstacles;\n};\n\nconst getNeighbors = (maze, ic, jc) => {\n  var res = [];\n  for (var i = 0; i < 4; i++) {\n    var nei = [ic, jc];\n    nei[i % 2] += Math.floor(i / 2) * 2 || -2;\n    if (\n      nei[0] < maze.length &&\n      nei[1] < maze[0].length &&\n      nei[0] >= 0 &&\n      nei[1] >= 0\n    ) {\n      if (maze[nei[0]][nei[1]] == true) res.push(nei);\n    }\n  }\n  return res;\n};\n\nexport const arrayToCells = array => {\n  var cells = [];\n  //var array = state.originalArray;\n  for (var x = 0; x < array.length; x++) {\n    for (var y = 0; y <= array[x]; y++) {\n      cells.push({ x: x, y: y });\n    }\n  }\n  return cells;\n};\n","import searchTypes from \"./search.types\";\nimport {\n  runSearchAlgorithm,\n  generatePath,\n  dist,\n  generateMaze\n} from \"../../utils/utils\";\nimport constants from \"../../utils/constants\";\n\nconst N_HORIZONTAL_CELLS = constants.N_HORIZONTAL_CELLS;\nconst N_VERTICAL_CELLS = constants.N_VERTICAL_CELLS;\nconst START_X = constants.START_X;\nconst START_Y = constants.START_Y;\nconst END_X = constants.END_X;\nconst END_Y = constants.END_Y;\nvar init_visited = Array.from({ length: N_VERTICAL_CELLS }, () =>\n  Array.from({ length: N_HORIZONTAL_CELLS }, () => false)\n);\n\nvar init_path = [];\nvar init_obstacles = Array.from({ length: N_VERTICAL_CELLS }, () =>\n  Array.from({ length: N_HORIZONTAL_CELLS }, () => false)\n);\n\nvar init_gScore = Array.from({ length: N_VERTICAL_CELLS }, () =>\n  Array.from({ length: N_HORIZONTAL_CELLS }, () => Number.POSITIVE_INFINITY)\n);\ninit_gScore[START_Y][START_X] = 0;\nvar init_fScore = Array.from({ length: N_VERTICAL_CELLS }, () =>\n  Array.from({ length: N_HORIZONTAL_CELLS }, () => Number.POSITIVE_INFINITY)\n);\ninit_fScore[START_Y][START_X] = dist(START_X, START_Y);\n\nvar init_dist = Array.from({ length: N_VERTICAL_CELLS }, () =>\n  Array.from({ length: N_HORIZONTAL_CELLS }, () => Number.POSITIVE_INFINITY)\n);\ninit_dist[START_Y][START_X] = 0;\n\nvar init_cameFrom = Array.from({ length: N_VERTICAL_CELLS }, () =>\n  Array.from({ length: N_HORIZONTAL_CELLS }, () => \"INIT\")\n);\ninit_cameFrom[START_Y][START_X] = \"START\";\ninit_cameFrom[END_Y][END_X] = \"END\";\n\nconst INITIAL_STATE = {\n  target: { x: END_X, y: END_Y },\n  isRunning: false,\n  searchDone: false,\n  foundTarget: false,\n  searchAlgorithm: \"\",\n  mazeAlgorithm: \"Prim\",\n  cells: [\n    {\n      x: START_X,\n      y: START_Y,\n      from: \"START\"\n    }\n  ],\n  fScore: init_fScore.map(row => [...row]),\n  gScore: init_fScore.map(row => [...row]),\n  openSet: [{ x: START_X, y: START_Y, from: \"START\" }],\n  closedSet: [],\n  cameFrom: init_cameFrom.map(row => [...row]),\n  dijkstra_dist: init_dist.map(row => [...row]),\n  path: init_path.map(cell => cell),\n  isAddingObstacles: false,\n  obstacles: init_obstacles.map(row => [...row]),\n  visited: init_visited.map(row => [...row]),\n  visited_open: init_visited.map(row => [...row])\n};\n\nconst searchReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case searchTypes.RUN_SEARCH:\n      var openSet = [];\n      var closedSet = [];\n      var foundTarget = false;\n      var neighbors = [];\n      var currentCells = [];\n      var path = [];\n      const result = runSearchAlgorithm(state);\n      if (result.length > 2) {\n        [openSet, closedSet, foundTarget, path] = result;\n        currentCells = openSet.concat(closedSet);\n        neighbors = openSet.concat(closedSet);\n      } else {\n        [neighbors, foundTarget] = result;\n        currentCells = state.cells.concat(neighbors);\n      }\n      //const [neighbors, foundTarget] = runSearchAlgorithm(state);\n      //currentCells = state.cells.concat(neighbors);\n      const { target } = state;\n\n      var toBeReturned = {\n        ...state,\n        isRunning: true,\n        searchDone: false,\n        foundTarget: false,\n        isAddingObstacles: false,\n        searchAlgorithm: state.searchAlgorithm,\n        openSet: openSet,\n        closedSet: closedSet,\n        path: state.path,\n        cells: currentCells,\n        visited: state.visited.map(row => [...row])\n      };\n\n      if (neighbors.length === 0 || foundTarget) {\n        toBeReturned.searchDone = true;\n        if (foundTarget) {\n          toBeReturned.foundTarget = true;\n          var currentPath = generatePath(currentCells, target);\n\n          toBeReturned.path = state.path.concat(currentPath);\n          if (result.length > 2) toBeReturned.path = path;\n        }\n      }\n      return toBeReturned;\n\n    case searchTypes.STOP_SEARCH:\n      return {\n        ...state,\n        isRunning: false\n      };\n    case searchTypes.CLEAR_SEARCH:\n      return {\n        ...state,\n        isRunning: false,\n        searchDone: false,\n        foundTarget: false,\n        //searchAlgorithm: \"\",\n        //sortAlgorithm: \"\",\n        cells: [\n          {\n            x: START_X,\n            y: START_Y,\n            from: \"START\"\n          }\n        ],\n        fScore: init_fScore.map(row => [...row]),\n        gScore: init_fScore.map(row => [...row]),\n        openSet: [{ x: START_X, y: START_Y, from: \"START\" }],\n        closedSet: [],\n        cameFrom: init_cameFrom.map(row => [...row]),\n        dijkstra_dist: init_dist.map(row => [...row]),\n        path: init_path.map(cell => cell),\n        isAddingObstacles: false,\n        obstacles: init_obstacles.map(row => [...row]),\n        visited: init_visited.map(row => [...row]),\n        visited_open: init_visited.map(row => [...row])\n      };\n    case searchTypes.DRAG_TARGET:\n      var newx = action.payload.x;\n      var newy = action.payload.y;\n      if (newx < 0) newx = 0;\n      if (newx >= N_HORIZONTAL_CELLS) newx = N_HORIZONTAL_CELLS - 1;\n      if (newy < 0) newy = 0;\n      if (newy >= N_VERTICAL_CELLS) newy = N_VERTICAL_CELLS - 1;\n      return {\n        ...state,\n        target: { x: newx, y: newy }\n      };\n    case searchTypes.ADD_OBSTACLE:\n      var newx = action.payload.x;\n      var newy = action.payload.y;\n      if (\n        newx >= 0 &&\n        newx < N_HORIZONTAL_CELLS &&\n        newy >= 0 &&\n        newy < N_VERTICAL_CELLS\n      ) {\n        const existing = state.obstacles[newy][newx];\n        if (!existing) {\n          state.obstacles[newy][newx] = true;\n          return {\n            ...state,\n            obstacles: state.obstacles.map(row => [...row])\n          };\n        }\n        return state;\n      }\n    case searchTypes.TOGGLE_ADD_OBSTACLE:\n      return {\n        ...state,\n        isAddingObstacles: !state.isAddingObstacles\n      };\n    case searchTypes.CLEAR_OBSTACLES:\n      return {\n        ...state,\n        obstacles: init_obstacles.map(row => [...row])\n      };\n    case searchTypes.SELECT_SEARCH_ALGORITHM:\n      return {\n        ...state,\n        searchDone: false,\n        cells: [\n          {\n            x: START_X,\n            y: START_Y,\n            from: \"START\"\n          }\n        ],\n        searchAlgorithm: action.payload\n      };\n    case searchTypes.SELECT_MAZE_ALGORITHM:\n      return {\n        ...state,\n        mazeAlgorithm: action.payload\n      };\n    case searchTypes.GENERATE_MAZE:\n      return {\n        ...state,\n        obstacles: generateMaze(state)\n      };\n    default:\n      return state;\n  }\n};\n\nexport default searchReducer;\n","import sortTypes from \"./sort.types\";\nimport { runSortAlgorithm, arrayToCells } from \"../../utils/utils\";\nimport constants from \"../../utils/constants\";\n\nconst N_HORIZONTAL_CELLS = constants.N_HORIZONTAL_CELLS;\nconst N_VERTICAL_CELLS = constants.N_VERTICAL_CELLS;\nvar mergeSort_idxes = [];\nfor (var i = 0; i < N_HORIZONTAL_CELLS; i++) {\n  mergeSort_idxes.push([i, i]);\n}\n\nconst INITIAL_STATE = {\n  isRunning: false,\n  searchDone: false,\n  sortAlgorithm: \"\",\n  cells: [],\n  originalArray: Array.from({ length: N_HORIZONTAL_CELLS }, () =>\n    Math.floor(Math.random() * N_VERTICAL_CELLS)\n  ),\n  sortIndex: 0,\n  quickSortIndexes: [[0, N_HORIZONTAL_CELLS - 1, N_HORIZONTAL_CELLS - 1, 0, 0]],\n  quickSort_pivotCol: N_HORIZONTAL_CELLS - 1,\n  quickSort_lowCol: 0,\n  quickSort_movingCol: 0,\n  mergeSort_savedState: [[1, 0]],\n  insertionSort_savedState: [[1, 1]]\n};\n\nconst sortReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case sortTypes.RUN_SORT:\n      var nextArray = [];\n      var idx = 0;\n      //var isRunning = true;\n      var sortDone = false;\n      [nextArray, idx] = runSortAlgorithm(state);\n      var nextCells = arrayToCells(nextArray);\n      if (idx >= nextArray.length) {\n        //isRunning = false;\n        sortDone = true;\n      }\n      return {\n        ...state,\n        cells: nextCells,\n        sortIndex: idx,\n        isRunning: true,\n        searchDone: sortDone\n      };\n\n    case sortTypes.STOP_SORT:\n      return {\n        ...state,\n        isRunning: false\n      };\n    case sortTypes.CLEAR_SORT:\n      var nextCells = [];\n      var array = Array.from({ length: N_HORIZONTAL_CELLS }, () =>\n        Math.floor(Math.random() * N_VERTICAL_CELLS)\n      );\n\n      nextCells = arrayToCells(array);\n\n      return {\n        ...state,\n        isRunning: false,\n        searchDone: true,\n        sortIndex: 0,\n        originalArray: array,\n        cells: nextCells,\n        quickSortIndexes: [\n          [0, N_HORIZONTAL_CELLS - 1, N_HORIZONTAL_CELLS - 1, 0, 0]\n        ],\n        quickSort_pivotCol: N_HORIZONTAL_CELLS - 1,\n        quickSort_lowCol: 0,\n        quickSort_movingCol: 0,\n        mergeSort_savedState: [[1, 0]],\n        insertionSort_savedState: [[1, 1]]\n      };\n\n    case sortTypes.SELECT_SORT_ALGORITHM:\n      var arrayCells = arrayToCells(state.originalArray);\n\n      return {\n        ...state,\n        cells: arrayCells,\n        sortAlgorithm: action.payload,\n        sortIndex: 0,\n        quickSortIndexes: [\n          [0, N_HORIZONTAL_CELLS - 1, N_HORIZONTAL_CELLS - 1, 0, 0]\n        ],\n        quickSort_pivotCol: N_HORIZONTAL_CELLS - 1,\n        quickSort_lowCol: 0,\n        quickSort_movingCol: 0,\n        mergeSort_savedState: [[1, 0]],\n        insertionSort_savedState: [[1, 1]]\n      };\n    default:\n      return state;\n  }\n};\n\nexport default sortReducer;\n","import { combineReducers } from \"redux\";\n\nimport directoryReducer from \"../redux/directory/directory.reducer\";\nimport searchReducer from \"../redux/search/search.reducer\";\nimport sortReducer from \"../redux/sort/sort.reducer\";\n\nconst rootReducer = combineReducers({\n  directory: directoryReducer,\n  searchReducer: searchReducer,\n  sortReducer: sortReducer\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./redux/rootReducer\";\nimport logger from \"redux-logger\";\nimport timerMiddleware from \"redux-timer\";\n\nconst middlewares = [timerMiddleware];\nif (process.env.NODE_ENV === \"development\") {\n  middlewares.push(logger);\n}\n\n//const store = createStore(rootReducer, applyMiddleware(...middlewares));\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(...middlewares))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}